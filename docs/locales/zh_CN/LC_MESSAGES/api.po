# SOME DESCRIPTIVE TITLE.
# Copyright (C) MindSpore and CQU NLP Team
# This file is distributed under the same license as the MindNLP package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: MindNLP\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-14 01:12+0800\n"
"PO-Revision-Date: 2022-12-14 01:20+0800\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../api/abc.rst:2
msgid "Abstract Class"
msgstr ""

#: ../../api/abc.rst:5
msgid "Backbones"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/backbones/base.py:docstring
#: of mindnlp.abc.backbones.base.BaseModel:1
msgid "Basic class for models"
msgstr "模型的基类"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/backbones/seq2seq.py:docstring
#: of mindnlp.abc.backbones.seq2seq.Seq2seqModel:1
msgid "Basic class for seq2seq models"
msgstr "seq2seq模型的基类"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/backbones/seq2seq.py:docstring
#: of mindnlp.abc.backbones.seq2seq.Seq2seqModel:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/backbones/seq2vec.py:docstring
#: mindnlp.abc.backbones.seq2vec.Seq2vecModel:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/modules/decoder.py:docstring
#: mindnlp.abc.modules.decoder.DecoderBase:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/modules/embedding.py:docstring
#: mindnlp.abc.modules.embedding.TokenEmbedding:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/modules/encoder.py:docstring
#: mindnlp.abc.modules.encoder.EncoderBase:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: mindnlp.common.loss.CMRC2018Loss:0
#: mindnlp.common.loss.CMRC2018Loss.construct:0 mindnlp.common.loss.RDropLoss:0
#: mindnlp.common.loss.RDropLoss.construct:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: mindnlp.common.metrics.accuracy:0 mindnlp.common.metrics.bleu:0
#: mindnlp.common.metrics.confusion_matrix:0 mindnlp.common.metrics.distinct:0
#: mindnlp.common.metrics.em_score:0 mindnlp.common.metrics.f1_score:0
#: mindnlp.common.metrics.matthews_correlation:0
#: mindnlp.common.metrics.pearson_correlation:0
#: mindnlp.common.metrics.perplexity:0 mindnlp.common.metrics.precision:0
#: mindnlp.common.metrics.recall:0 mindnlp.common.metrics.rouge_l:0
#: mindnlp.common.metrics.rouge_n:0
#: mindnlp.common.metrics.spearman_correlation:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:0
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: mindnlp.dataset.machine_translation.multi30k.Multi30k:0
#: mindnlp.dataset.machine_translation.multi30k.Multi30k_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: mindnlp.dataset.question_answer.squad1.SQuAD1:0
#: mindnlp.dataset.question_answer.squad1.SQuAD1_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad2.py:docstring
#: mindnlp.dataset.question_answer.squad2.SQuAD2:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking:0
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/udpos.py:docstring
#: mindnlp.dataset.sequence_tagging.udpos.UDPOS:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: mindnlp.dataset.text_classification.agnews.AG_NEWS:0
#: mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull:0
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity:0
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: mindnlp.dataset.text_classification.cola.CoLA:0
#: mindnlp.dataset.text_classification.cola.CoLA_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: mindnlp.dataset.text_classification.dbpedia.DBpedia:0
#: mindnlp.dataset.text_classification.dbpedia.DBpedia_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: mindnlp.dataset.text_classification.imdb.IMDB:0
#: mindnlp.dataset.text_classification.imdb.IMDB_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: mindnlp.dataset.text_classification.mnli.MNLI:0
#: mindnlp.dataset.text_classification.mnli.MNLI_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: mindnlp.dataset.text_classification.mrpc.MRPC:0
#: mindnlp.dataset.text_classification.mrpc.MRPC_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: mindnlp.dataset.text_classification.qnli.QNLI:0
#: mindnlp.dataset.text_classification.qnli.QNLI_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: mindnlp.dataset.text_classification.qqp.QQP:0
#: mindnlp.dataset.text_classification.qqp.QQP_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: mindnlp.dataset.text_classification.rte.RTE:0
#: mindnlp.dataset.text_classification.rte.RTE_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sogounews.py:docstring
#: mindnlp.dataset.text_classification.sogounews.SogouNews:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: mindnlp.dataset.text_classification.sst2.SST2:0
#: mindnlp.dataset.text_classification.sst2.SST2_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: mindnlp.dataset.text_classification.stsb.STSB:0
#: mindnlp.dataset.text_classification.stsb.STSB_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.WNLI:0
#: mindnlp.dataset.text_classification.wnli.WNLI_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers:0
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull:0
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity:0
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/lcsts.py:docstring
#: mindnlp.dataset.text_generation.lcsts.LCSTS:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/penntreebank.py:docstring
#: mindnlp.dataset.text_generation.penntreebank.PennTreebank:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext103.py:docstring
#: mindnlp.dataset.text_generation.wikitext103.WikiText103:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext2.py:docstring
#: mindnlp.dataset.text_generation.wikitext2.WikiText2:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/best_model_callback.py:docstring
#: mindnlp.engine.callbacks.best_model_callback.BestModelCallback:0
#: mindnlp.engine.callbacks.best_model_callback.BestModelCallback.evaluate_end:0
#: mindnlp.engine.callbacks.best_model_callback.BestModelCallback.is_better_metric_value:0
#: mindnlp.engine.callbacks.best_model_callback.BestModelCallback.train_end:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: mindnlp.engine.callbacks.callback_manager.CallbackManager:0
#: mindnlp.engine.callbacks.callback_manager.RunContext:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/checkpoint_callback.py:docstring
#: mindnlp.engine.callbacks.checkpoint_callback.CheckpointCallback:0
#: mindnlp.engine.callbacks.checkpoint_callback.CheckpointCallback.train_begin:0
#: mindnlp.engine.callbacks.checkpoint_callback.CheckpointCallback.train_epoch_end:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/earlystop_callback.py:docstring
#: mindnlp.engine.callbacks.earlystop_callback.EarlyStopCallback:0
#: mindnlp.engine.callbacks.earlystop_callback.EarlyStopCallback.evaluate_end:0
#: mindnlp.engine.callbacks.earlystop_callback.EarlyStopCallback.is_better_metric_value:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: mindnlp.engine.callbacks.timer_callback.TimerCallback:0
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.evaluate_begin:0
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.evaluate_end:0
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.format_timer:0
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_begin:0
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_end:0
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_epoch_begin:0
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_epoch_end:0
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_step_begin:0
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_step_end:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/evaluator.py:docstring
#: mindnlp.engine.evaluator.Evaluator:0
#: mindnlp.engine.evaluator.Evaluator.run:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: mindnlp.engine.metrics.accuracy.Accuracy:0
#: mindnlp.engine.metrics.accuracy.Accuracy.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore:0
#: mindnlp.engine.metrics.bleu.BleuScore.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix:0
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: mindnlp.engine.metrics.distinct.Distinct:0
#: mindnlp.engine.metrics.distinct.Distinct.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: mindnlp.engine.metrics.em_score.EmScore:0
#: mindnlp.engine.metrics.em_score.EmScore.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: mindnlp.engine.metrics.f1.F1Score:0
#: mindnlp.engine.metrics.f1.F1Score.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation:0
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: mindnlp.engine.metrics.pearson.PearsonCorrelation:0
#: mindnlp.engine.metrics.pearson.PearsonCorrelation.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity:0
#: mindnlp.engine.metrics.perplexity.Perplexity.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: mindnlp.engine.metrics.precision.Precision:0
#: mindnlp.engine.metrics.precision.Precision.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall:0
#: mindnlp.engine.metrics.recall.Recall.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeL:0
#: mindnlp.engine.metrics.rouge.RougeL.update:0
#: mindnlp.engine.metrics.rouge.RougeN:0
#: mindnlp.engine.metrics.rouge.RougeN.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation:0
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/trainer.py:docstring
#: mindnlp.engine.trainer.Trainer:0 mindnlp.engine.trainer.Trainer.run:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: mindnlp.models.bert.BertAttention.construct:0
#: mindnlp.models.bert.BertEmbeddings.construct:0
#: mindnlp.models.bert.BertEncoder.construct:0
#: mindnlp.models.bert.BertForPretraining.construct:0
#: mindnlp.models.bert.BertIntermediate.construct:0
#: mindnlp.models.bert.BertLMPredictionHead.construct:0
#: mindnlp.models.bert.BertLayer.construct:0
#: mindnlp.models.bert.BertModel.construct:0
#: mindnlp.models.bert.BertOutput.construct:0
#: mindnlp.models.bert.BertPooler.construct:0
#: mindnlp.models.bert.BertPreTrainingHeads.construct:0
#: mindnlp.models.bert.BertPredictionHeadTransform.construct:0
#: mindnlp.models.bert.BertSelfAttention.construct:0
#: mindnlp.models.bert.BertSelfOutput.construct:0
#: mindnlp.models.bert.Matmul.construct:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: mindnlp.modules.attentions.AdditiveAttention:0
#: mindnlp.modules.attentions.AdditiveAttention.construct:0
#: mindnlp.modules.attentions.BinaryAttention.construct:0
#: mindnlp.modules.attentions.CosineAttention:0
#: mindnlp.modules.attentions.CosineAttention.construct:0
#: mindnlp.modules.attentions.LinearAttention:0
#: mindnlp.modules.attentions.LinearAttention.construct:0
#: mindnlp.modules.attentions.LocationAwareAttention:0
#: mindnlp.modules.attentions.LocationAwareAttention.construct:0
#: mindnlp.modules.attentions.MutiHeadAttention:0
#: mindnlp.modules.attentions.MutiHeadAttention.construct:0
#: mindnlp.modules.attentions.ScaledDotAttention:0
#: mindnlp.modules.attentions.ScaledDotAttention.construct:0
#: mindnlp.modules.attentions.SelfAttention:0
#: mindnlp.modules.attentions.SelfAttention.construct:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: mindnlp.modules.decoder.rnn_decoder.RNNDecoder:0
#: mindnlp.modules.decoder.rnn_decoder.RNNDecoder.construct:0
#: mindnlp.modules.decoder.rnn_decoder.RNNDecoder.extract_features:0
#: mindnlp.modules.decoder.rnn_decoder.RNNDecoder.output_layer:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: mindnlp.modules.embeddings.fasttext_embedding.Fasttext:0
#: mindnlp.modules.embeddings.fasttext_embedding.Fasttext.construct:0
#: mindnlp.modules.embeddings.fasttext_embedding.Fasttext.from_pretrained:0
#: mindnlp.modules.embeddings.fasttext_embedding.Fasttext.load:0
#: mindnlp.modules.embeddings.fasttext_embedding.Fasttext.save:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove:0
#: mindnlp.modules.embeddings.glove_embedding.Glove.construct:0
#: mindnlp.modules.embeddings.glove_embedding.Glove.from_pretrained:0
#: mindnlp.modules.embeddings.glove_embedding.Glove.load:0
#: mindnlp.modules.embeddings.glove_embedding.Glove.save:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec:0
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.construct:0
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.from_pretrained:0
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.load:0
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.save:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: mindnlp.modules.encoder.cnn_encoder.CNNEncoder:0
#: mindnlp.modules.encoder.cnn_encoder.CNNEncoder.construct:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: mindnlp.modules.encoder.rnn_encoder.RNNEncoder:0
#: mindnlp.modules.encoder.rnn_encoder.RNNEncoder.construct:0
#: mindnlp.modules.encoder.rnn_encoder.RNNEncoder.reorder_encoder_out:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: mindnlp.utils.decompress.ungz:0 mindnlp.utils.decompress.untar:0
#: mindnlp.utils.decompress.unzip:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: mindnlp.utils.download.cache_file:0 mindnlp.utils.download.cached_path:0
#: mindnlp.utils.download.check_md5:0 mindnlp.utils.download.get_cache_path:0
#: mindnlp.utils.download.get_dataset_url:0
#: mindnlp.utils.download.get_filepath:0
#: mindnlp.utils.download.get_from_cache:0 mindnlp.utils.download.http_get:0
#: mindnlp.utils.download.match_file:0
msgid "Parameters"
msgstr "参数"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/backbones/seq2seq.py:docstring
#: of mindnlp.abc.backbones.seq2seq.Seq2seqModel:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/backbones/seq2vec.py:docstring
#: mindnlp.abc.backbones.seq2vec.Seq2vecModel:3
msgid "The encoder."
msgstr "编码器"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/backbones/seq2seq.py:docstring
#: of mindnlp.abc.backbones.seq2seq.Seq2seqModel:5
msgid "The decoder."
msgstr "解码器"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/backbones/seq2vec.py:docstring
#: of mindnlp.abc.backbones.seq2vec.Seq2vecModel:1
msgid "Basic class for seq2vec models"
msgstr "seq2vec模型的基类"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/backbones/seq2vec.py:docstring
#: of mindnlp.abc.backbones.seq2vec.Seq2vecModel:5
msgid "The module to process encoder output."
msgstr "处理编码器输出的模块"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/backbones/seq2vec.py:docstring
#: of mindnlp.abc.backbones.seq2vec.Seq2vecModel:7
msgid ""
"The drop out rate, greater than 0 and less equal than 1. If None, not "
"dropping out input units. Drfault: None."
msgstr ""
"输入神经元丢弃概率，数值范围在0到1之间。如果值为None，则不丢弃输入神经元。默"
"认值：None"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/backbones/pretrained.py:docstring
#: of mindnlp.abc.backbones.pretrained.PretrainedModel:1
msgid "Abstract class for Pretrained models"
msgstr "预训练模型的抽象类"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/backbones/pretrained.py:docstring
#: of mindnlp.abc.backbones.pretrained.PretrainedConfig:1
msgid "Abstract class for Pretrained models config."
msgstr "用于预训练模型配置的抽象类"

#: ../../api/abc.rst:14
msgid "Callback"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/callback.py:docstring
#: of mindnlp.abc.callback.Callback:1
msgid ""
"Abstract base class used to build a callback class. Callbacks are context "
"managers which will be entered and exited when passing into the Model. You "
"can use this mechanism to do some custom operations."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/callback.py:docstring
#: of mindnlp.abc.callback.Callback:5
msgid ""
"Callback function can perform some operations before and after step or "
"epoch. To create a custom callback, subclass Callback and override the "
"method associated with the stage of interest."
msgstr ""

#: ../../api/abc.rst:20
msgid "Metric"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/metric.py:docstring
#: of mindnlp.abc.metric.Metric:1
msgid ""
"Base class of all metrics. Never use this class directly, but instantiate "
"one of its subclasses instead."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/metric.py:docstring
#: of mindnlp.abc.metric.Metric:4
msgid ""
"Functions `update` will accumulate intermediate results in the evaluation "
"process, `eval` will evaluate the final result, and `clear` will "
"reinitialize the intermediate results. Function `get_metric_name` will "
"provide class name."
msgstr ""

#: ../../api/abc.rst:26 ../../api/modules.rst:2
msgid "Modules"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/modules/encoder.py:docstring
#: of mindnlp.abc.modules.encoder.EncoderBase:1
msgid "Basic class for encoders"
msgstr "编码器模块的基类"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/modules/decoder.py:docstring
#: of mindnlp.abc.modules.decoder.DecoderBase:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/modules/encoder.py:docstring
#: mindnlp.abc.modules.encoder.EncoderBase:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: mindnlp.modules.decoder.rnn_decoder.RNNDecoder:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: mindnlp.modules.encoder.cnn_encoder.CNNEncoder:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: mindnlp.modules.encoder.rnn_encoder.RNNEncoder:3
msgid "The embedding layer."
msgstr "嵌入层"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/modules/decoder.py:docstring
#: of mindnlp.abc.modules.decoder.DecoderBase:1
msgid "Basic class for dedcoders"
msgstr "解码器模块的基类"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/modules/embedding.py:docstring
#: of mindnlp.abc.modules.embedding.TokenEmbedding:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: mindnlp.modules.embeddings.fasttext_embedding.Fasttext:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec:1
msgid "Create vocab and Embedding from a given pre-trained vector file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/modules/embedding.py:docstring
#: of mindnlp.abc.modules.embedding.TokenEmbedding:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: mindnlp.modules.embeddings.fasttext_embedding.Fasttext:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec:3
msgid "Passins into Vocab for initialization."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/modules/embedding.py:docstring
#: of mindnlp.abc.modules.embedding.TokenEmbedding:5
msgid ""
"Passing into Vocab and Tensor,use these values to initialize Embedding "
"directly."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/modules/embedding.py:docstring
#: of mindnlp.abc.modules.embedding.TokenEmbedding:7
msgid "Whether this parameter needs to be gradient to update."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/abc/modules/embedding.py:docstring
#: of mindnlp.abc.modules.embedding.TokenEmbedding:9
msgid "Dropout of the output of Embedding."
msgstr ""

#: ../../api/common.rst:2
msgid "Common"
msgstr ""

#: ../../api/common.rst:6
msgid "amp"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/amp.py:docstring
#: of mindnlp.common.amp:1
msgid "Auto mixed precision api."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/amp.py:docstring
#: of mindnlp.common.amp.DynamicLossScaler:1 mindnlp.common.amp.NoLossScaler:1
#: mindnlp.common.amp.StaticLossScaler:1
msgid "Bases: :py:class:`~mindnlp.common.amp.LossScaler`"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/amp.py:docstring
#: of mindnlp.common.amp.DynamicLossScaler:1
msgid "Dynamic LossScaler"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/amp.py:docstring
#: of mindnlp.common.amp.DynamicLossScaler.adjust:1
#: mindnlp.common.amp.LossScaler.adjust:1
#: mindnlp.common.amp.NoLossScaler.adjust:1
#: mindnlp.common.amp.StaticLossScaler.adjust:1
msgid "adjust scale value."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/amp.py:docstring
#: of mindnlp.common.amp.DynamicLossScaler.scale:1
#: mindnlp.common.amp.LossScaler.scale:1
#: mindnlp.common.amp.NoLossScaler.scale:1
#: mindnlp.common.amp.StaticLossScaler.scale:1
msgid "scale inputs tensor."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/amp.py:docstring
#: of mindnlp.common.amp.DynamicLossScaler.unscale:1
#: mindnlp.common.amp.LossScaler.unscale:1
#: mindnlp.common.amp.NoLossScaler.unscale:1
#: mindnlp.common.amp.StaticLossScaler.unscale:1
msgid "unscale inputs tensor."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/amp.py:docstring
#: of mindnlp.common.amp.LossScaler:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: mindnlp.dataset.question_answer.squad1.Squad1:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad2.py:docstring
#: mindnlp.dataset.question_answer.squad2.Squad2:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: mindnlp.dataset.sequence_tagging.conll2000chunking.Conll2000chunking:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/udpos.py:docstring
#: mindnlp.dataset.sequence_tagging.udpos.Udpos:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: mindnlp.dataset.text_classification.agnews.Agnews:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewfull.Amazonreviewfull:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewpolarity.Amazonreviewpolarity:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: mindnlp.dataset.text_classification.cola.Cola:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: mindnlp.dataset.text_classification.dbpedia.Dbpedia:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: mindnlp.dataset.text_classification.imdb.Imdb:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: mindnlp.dataset.text_classification.mnli.Mnli:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: mindnlp.dataset.text_classification.mrpc.Mrpc:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: mindnlp.dataset.text_classification.qnli.Qnli:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: mindnlp.dataset.text_classification.qqp.Qqp:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: mindnlp.dataset.text_classification.rte.Rte:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sogounews.py:docstring
#: mindnlp.dataset.text_classification.sogounews.Sogounews:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: mindnlp.dataset.text_classification.sst2.Sst2:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: mindnlp.dataset.text_classification.stsb.Stsb:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.Wnli:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: mindnlp.dataset.text_classification.yahooanswers.Yahooanswers:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewfull.Yelpreviewfull:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewpolarity.Yelpreviewpolarity:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/lcsts.py:docstring
#: mindnlp.dataset.text_generation.lcsts.Lcsts:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: mindnlp.engine.callbacks.callback_manager.RunContext:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: mindnlp.engine.callbacks.timer_callback.Timers:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/evaluator.py:docstring
#: mindnlp.engine.evaluator.Evaluator:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/trainer.py:docstring
#: mindnlp.engine.trainer.Trainer:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: mindnlp.models.bert.PretrainedConfig:1
msgid "Bases: :py:class:`object`"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/amp.py:docstring
#: of mindnlp.common.amp.LossScaler:1
msgid "Basic LossScaler."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/amp.py:docstring
#: of mindnlp.common.amp.NoLossScaler:1
msgid "No LossScaler"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/amp.py:docstring
#: of mindnlp.common.amp.StaticLossScaler:1
msgid "Static LossScaler."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/amp.py:docstring
#: of mindnlp.common.amp.all_finite:1
msgid "whether all inputs tensor are finite."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/amp.py:docstring
#: of mindnlp.common.amp.auto_black_list:1
msgid "auto cast based on black list"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/amp.py:docstring
#: of mindnlp.common.amp.auto_mixed_precision:1
msgid "auto mixed precision cast."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/amp.py:docstring
#: of mindnlp.common.amp.auto_white_list:1
msgid "auto cast based on white list"
msgstr ""

#: ../../api/common.rst:14
msgid "loss"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss:1
msgid "Losses"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.CMRC2018Loss:1 mindnlp.common.loss.RDropLoss:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: mindnlp.models.bert.BertAttention:1 mindnlp.models.bert.BertEmbeddings:1
#: mindnlp.models.bert.BertEncoder:1 mindnlp.models.bert.BertForPretraining:1
#: mindnlp.models.bert.BertIntermediate:1
#: mindnlp.models.bert.BertLMPredictionHead:1 mindnlp.models.bert.BertLayer:1
#: mindnlp.models.bert.BertModel:1 mindnlp.models.bert.BertOutput:1
#: mindnlp.models.bert.BertPooler:1 mindnlp.models.bert.BertPreTrainingHeads:1
#: mindnlp.models.bert.BertPredictionHeadTransform:1
#: mindnlp.models.bert.BertSelfAttention:1 mindnlp.models.bert.BertSelfOutput:1
#: mindnlp.models.bert.Matmul:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: mindnlp.modules.attentions.AdditiveAttention:1
#: mindnlp.modules.attentions.BinaryAttention:1
#: mindnlp.modules.attentions.CosineAttention:1
#: mindnlp.modules.attentions.LinearAttention:1
#: mindnlp.modules.attentions.LocationAwareAttention:1
#: mindnlp.modules.attentions.MutiHeadAttention:1
#: mindnlp.modules.attentions.ScaledDotAttention:1
#: mindnlp.modules.attentions.SelfAttention:1
msgid "Bases: :py:class:`~mindspore.nn.cell.Cell`"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.CMRC2018Loss:1
msgid "used to compute CMRC2018 chinese Q&A task"
msgstr "用于计算CMRC2018中文问答任务"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.CMRC2018Loss:3
msgid ""
"Indicate how to average the loss, the candicates are \"mean\" and \"sum\". "
"Default: \"mean\"."
msgstr "计算loss的方式，候选有 `mean` 和 `sum`. 默认：`mean`"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.CMRC2018Loss.construct:1
msgid "compute CMRC2018Loss"
msgstr "计算 CMRC2018Loss"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.CMRC2018Loss.construct:3
#: mindnlp.common.loss.CMRC2018Loss.construct:5
msgid "size: batch_size, dtype: int."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.CMRC2018Loss.construct:7
msgid "size: batch_size, dtype: float."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.CMRC2018Loss.construct:9
#: mindnlp.common.loss.CMRC2018Loss.construct:11
msgid "size: batch_size*max_len, dtype: float."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.CMRC2018Loss.construct:0
#: mindnlp.common.loss.RDropLoss.construct:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: mindnlp.common.metrics.accuracy:0 mindnlp.common.metrics.bleu:0
#: mindnlp.common.metrics.confusion_matrix:0 mindnlp.common.metrics.distinct:0
#: mindnlp.common.metrics.em_score:0 mindnlp.common.metrics.f1_score:0
#: mindnlp.common.metrics.matthews_correlation:0
#: mindnlp.common.metrics.pearson_correlation:0
#: mindnlp.common.metrics.perplexity:0 mindnlp.common.metrics.precision:0
#: mindnlp.common.metrics.recall:0 mindnlp.common.metrics.rouge_l:0
#: mindnlp.common.metrics.rouge_n:0
#: mindnlp.common.metrics.spearman_correlation:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:0
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: mindnlp.dataset.machine_translation.multi30k.Multi30k:0
#: mindnlp.dataset.machine_translation.multi30k.Multi30k_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: mindnlp.dataset.question_answer.squad1.SQuAD1:0
#: mindnlp.dataset.question_answer.squad1.SQuAD1_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad2.py:docstring
#: mindnlp.dataset.question_answer.squad2.SQuAD2:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking:0
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/udpos.py:docstring
#: mindnlp.dataset.sequence_tagging.udpos.UDPOS:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: mindnlp.dataset.text_classification.agnews.AG_NEWS:0
#: mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull:0
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity:0
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: mindnlp.dataset.text_classification.cola.CoLA:0
#: mindnlp.dataset.text_classification.cola.CoLA_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: mindnlp.dataset.text_classification.dbpedia.DBpedia:0
#: mindnlp.dataset.text_classification.dbpedia.DBpedia_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: mindnlp.dataset.text_classification.imdb.IMDB:0
#: mindnlp.dataset.text_classification.imdb.IMDB_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: mindnlp.dataset.text_classification.mnli.MNLI:0
#: mindnlp.dataset.text_classification.mnli.MNLI_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: mindnlp.dataset.text_classification.mrpc.MRPC:0
#: mindnlp.dataset.text_classification.mrpc.MRPC_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: mindnlp.dataset.text_classification.qnli.QNLI:0
#: mindnlp.dataset.text_classification.qnli.QNLI_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: mindnlp.dataset.text_classification.qqp.QQP:0
#: mindnlp.dataset.text_classification.qqp.QQP_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: mindnlp.dataset.text_classification.rte.RTE:0
#: mindnlp.dataset.text_classification.rte.RTE_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sogounews.py:docstring
#: mindnlp.dataset.text_classification.sogounews.SogouNews:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: mindnlp.dataset.text_classification.sst2.SST2:0
#: mindnlp.dataset.text_classification.sst2.SST2_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: mindnlp.dataset.text_classification.stsb.STSB:0
#: mindnlp.dataset.text_classification.stsb.STSB_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.WNLI:0
#: mindnlp.dataset.text_classification.wnli.WNLI_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers:0
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull:0
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity:0
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/lcsts.py:docstring
#: mindnlp.dataset.text_generation.lcsts.LCSTS:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/penntreebank.py:docstring
#: mindnlp.dataset.text_generation.penntreebank.PennTreebank:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext103.py:docstring
#: mindnlp.dataset.text_generation.wikitext103.WikiText103:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext2.py:docstring
#: mindnlp.dataset.text_generation.wikitext2.WikiText2:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: mindnlp.engine.metrics.accuracy.Accuracy.eval:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore.eval:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix.eval:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: mindnlp.engine.metrics.distinct.Distinct.eval:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: mindnlp.engine.metrics.f1.F1Score.eval:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation.eval:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: mindnlp.engine.metrics.pearson.PearsonCorrelation.eval:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity.eval:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: mindnlp.engine.metrics.precision.Precision.eval:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall.eval:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeL.eval:0
#: mindnlp.engine.metrics.rouge.RougeN.eval:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation.eval:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: mindnlp.models.bert.BertAttention.construct:0
#: mindnlp.models.bert.BertEmbeddings.construct:0
#: mindnlp.models.bert.BertEncoder.construct:0
#: mindnlp.models.bert.BertForPretraining.construct:0
#: mindnlp.models.bert.BertIntermediate.construct:0
#: mindnlp.models.bert.BertLMPredictionHead.construct:0
#: mindnlp.models.bert.BertLayer.construct:0
#: mindnlp.models.bert.BertModel.construct:0
#: mindnlp.models.bert.BertOutput.construct:0
#: mindnlp.models.bert.BertPooler.construct:0
#: mindnlp.models.bert.BertPreTrainingHeads.construct:0
#: mindnlp.models.bert.BertPredictionHeadTransform.construct:0
#: mindnlp.models.bert.BertSelfAttention.construct:0
#: mindnlp.models.bert.BertSelfOutput.construct:0
#: mindnlp.models.bert.Matmul.construct:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: mindnlp.modules.attentions.AdditiveAttention.construct:0
#: mindnlp.modules.attentions.BinaryAttention.construct:0
#: mindnlp.modules.attentions.CosineAttention.construct:0
#: mindnlp.modules.attentions.LinearAttention.construct:0
#: mindnlp.modules.attentions.LocationAwareAttention.construct:0
#: mindnlp.modules.attentions.MutiHeadAttention.construct:0
#: mindnlp.modules.attentions.ScaledDotAttention.construct:0
#: mindnlp.modules.attentions.SelfAttention.construct:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: mindnlp.modules.decoder.rnn_decoder.RNNDecoder.construct:0
#: mindnlp.modules.decoder.rnn_decoder.RNNDecoder.extract_features:0
#: mindnlp.modules.decoder.rnn_decoder.RNNDecoder.output_layer:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: mindnlp.modules.embeddings.fasttext_embedding.Fasttext.construct:0
#: mindnlp.modules.embeddings.fasttext_embedding.Fasttext.from_pretrained:0
#: mindnlp.modules.embeddings.fasttext_embedding.Fasttext.load:0
#: mindnlp.modules.embeddings.fasttext_embedding.Fasttext.save:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.construct:0
#: mindnlp.modules.embeddings.glove_embedding.Glove.from_pretrained:0
#: mindnlp.modules.embeddings.glove_embedding.Glove.load:0
#: mindnlp.modules.embeddings.glove_embedding.Glove.save:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.construct:0
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.from_pretrained:0
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.load:0
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.save:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: mindnlp.modules.encoder.cnn_encoder.CNNEncoder.construct:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: mindnlp.modules.encoder.rnn_encoder.RNNEncoder.construct:0
#: mindnlp.modules.encoder.rnn_encoder.RNNEncoder.reorder_encoder_out:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: mindnlp.utils.decompress.ungz:0 mindnlp.utils.decompress.untar:0
#: mindnlp.utils.decompress.unzip:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: mindnlp.utils.download.cache_file:0 mindnlp.utils.download.cached_path:0
#: mindnlp.utils.download.check_md5:0 mindnlp.utils.download.get_cache_path:0
#: mindnlp.utils.download.get_dataset_url:0
#: mindnlp.utils.download.get_filepath:0
#: mindnlp.utils.download.get_from_cache:0 mindnlp.utils.download.http_get:0
#: mindnlp.utils.download.match_file:0
msgid "Returns"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.CMRC2018Loss.construct:14
msgid "Tensor, the CMRC2018 loss."
msgstr "Tensor, 计算后的 CMRC2018Loss"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.CMRC2018Loss.construct:0
#: mindnlp.common.loss.RDropLoss.construct:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: mindnlp.common.metrics.accuracy:0 mindnlp.common.metrics.bleu:0
#: mindnlp.common.metrics.confusion_matrix:0 mindnlp.common.metrics.em_score:0
#: mindnlp.common.metrics.f1_score:0
#: mindnlp.common.metrics.pearson_correlation:0
#: mindnlp.common.metrics.perplexity:0 mindnlp.common.metrics.precision:0
#: mindnlp.common.metrics.recall:0 mindnlp.common.metrics.rouge_n:0
#: mindnlp.common.metrics.spearman_correlation:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:0
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: mindnlp.dataset.machine_translation.multi30k.Multi30k:0
#: mindnlp.dataset.machine_translation.multi30k.Multi30k_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: mindnlp.dataset.question_answer.squad1.SQuAD1:0
#: mindnlp.dataset.question_answer.squad1.SQuAD1_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad2.py:docstring
#: mindnlp.dataset.question_answer.squad2.SQuAD2:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: mindnlp.dataset.text_classification.cola.CoLA_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: mindnlp.dataset.text_classification.dbpedia.DBpedia_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: mindnlp.dataset.text_classification.imdb.IMDB_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: mindnlp.dataset.text_classification.mnli.MNLI_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: mindnlp.dataset.text_classification.mrpc.MRPC_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: mindnlp.dataset.text_classification.qnli.QNLI_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: mindnlp.dataset.text_classification.qqp.QQP_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: mindnlp.dataset.text_classification.rte.RTE_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: mindnlp.dataset.text_classification.sst2.SST2_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: mindnlp.dataset.text_classification.stsb.STSB_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.WNLI_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity_Process:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/lcsts.py:docstring
#: mindnlp.dataset.text_generation.lcsts.LCSTS:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/penntreebank.py:docstring
#: mindnlp.dataset.text_generation.penntreebank.PennTreebank:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext103.py:docstring
#: mindnlp.dataset.text_generation.wikitext103.WikiText103:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext2.py:docstring
#: mindnlp.dataset.text_generation.wikitext2.WikiText2:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: mindnlp.engine.metrics.accuracy.Accuracy.eval:0
#: mindnlp.engine.metrics.accuracy.Accuracy.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore:0
#: mindnlp.engine.metrics.bleu.BleuScore.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: mindnlp.engine.metrics.distinct.Distinct.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: mindnlp.engine.metrics.em_score.EmScore.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: mindnlp.engine.metrics.f1.F1Score.eval:0
#: mindnlp.engine.metrics.f1.F1Score.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: mindnlp.engine.metrics.pearson.PearsonCorrelation.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity.eval:0
#: mindnlp.engine.metrics.perplexity.Perplexity.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: mindnlp.engine.metrics.precision.Precision.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeL.update:0
#: mindnlp.engine.metrics.rouge.RougeN.eval:0
#: mindnlp.engine.metrics.rouge.RougeN.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation.update:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: mindnlp.modules.encoder.cnn_encoder.CNNEncoder:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: mindnlp.utils.decompress.ungz:0 mindnlp.utils.decompress.untar:0
#: mindnlp.utils.decompress.unzip:0
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: mindnlp.utils.download.cache_file:0 mindnlp.utils.download.cached_path:0
#: mindnlp.utils.download.check_md5:0 mindnlp.utils.download.get_dataset_url:0
#: mindnlp.utils.download.get_filepath:0
#: mindnlp.utils.download.get_from_cache:0 mindnlp.utils.download.http_get:0
#: mindnlp.utils.download.match_file:0
msgid "Raises"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.CMRC2018Loss.construct:16
msgid "if 'reduction' is not 'sum' or 'mean'."
msgstr "计算方式 `reduction` 没有选择 `sum` 或 `mean`"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.CMRC2018Loss.construct:19
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: mindnlp.common.metrics.accuracy:29 mindnlp.common.metrics.bleu:36
#: mindnlp.common.metrics.confusion_matrix:21
#: mindnlp.common.metrics.distinct:16 mindnlp.common.metrics.em_score:16
#: mindnlp.common.metrics.f1_score:29
#: mindnlp.common.metrics.matthews_correlation:29
#: mindnlp.common.metrics.pearson_correlation:21
#: mindnlp.common.metrics.precision:29 mindnlp.common.metrics.recall:27
#: mindnlp.common.metrics.rouge_l:29 mindnlp.common.metrics.rouge_n:20
#: mindnlp.common.metrics.spearman_correlation:22
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: mindnlp.engine.metrics.accuracy.Accuracy:16
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore:29
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: mindnlp.engine.metrics.distinct.Distinct:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: mindnlp.engine.metrics.em_score.EmScore:8
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: mindnlp.engine.metrics.f1.F1Score:16
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation:18
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: mindnlp.engine.metrics.pearson.PearsonCorrelation:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: mindnlp.engine.metrics.precision.Precision:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeL:23
#: mindnlp.engine.metrics.rouge.RougeN:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation:12
msgid "Example"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.RDropLoss:1
msgid ""
"R-Drop Loss implementation For more information about R-drop please refer to "
"this paper: https://arxiv.org/abs/2106.14448"
msgstr ""
"R-Drop Loss 的实现。更多关于R-drop的信息请参考这篇文章：https://arxiv.org/"
"abs/2106.14448"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.RDropLoss:4
msgid ""
"Original implementation please refer to this code: https://github.com/"
"dropreg/R-Drop"
msgstr "原始实现请参考这里的代码：https://github.com/dropreg/R-Drop"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.RDropLoss:6
msgid ""
"Indicate how to average the loss, the candicates are \"none\", \"batchmean\","
"\"mean\",\"sum\". Default: \"none\".  - \"mean\": The reduced mean loss is "
"returned. - \"batchmean\": The sum loss divided by batch size is returned. - "
"\"sum\": The reduced sum loss is returned. - \"none\": No reduction will be "
"applied."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.RDropLoss:6
msgid ""
"Indicate how to average the loss, the candicates are \"none\", \"batchmean\","
"\"mean\",\"sum\". Default: \"none\"."
msgstr ""
"计算loss的方式，候选有 `none`, `batchmean`, `mean`, `sum`。默认: `none`"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.RDropLoss:9
msgid "\"mean\": The reduced mean loss is returned."
msgstr "`mean`：将返回降维后的loss均值"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.RDropLoss:10
msgid "\"batchmean\": The sum loss divided by batch size is returned."
msgstr "`batchmean`：将返回降维后的loss批次均值"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.RDropLoss:11
msgid "\"sum\": The reduced sum loss is returned."
msgstr "`sum`：将返回降维后的loss求和"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.RDropLoss:12
msgid "\"none\": No reduction will be applied."
msgstr "`none`：不采取任何降维方法"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.RDropLoss.construct:1
msgid "Returns loss tensor, the rdrop loss of p and q."
msgstr "返回p和q的rdrop loss"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.RDropLoss.construct:3
msgid "The first forward logits of training examples."
msgstr "训练样本的第一次前向向量"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.RDropLoss.construct:5
msgid "The second forward logits of training examples."
msgstr "训练样本的第二次前向向量"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.RDropLoss.construct:7
msgid ""
"The Tensor containing the binary mask to index with, it's data type is bool. "
"Default: None."
msgstr "包含要索引的二进制掩码的张量Tensor，其数据类型为 `bool`。默认: `None`"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.RDropLoss.construct:11
msgid "Tensor, the rdrop loss of p and q."
msgstr "Tensor， p和q的rdrop loss"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.RDropLoss.construct:13
msgid ""
"if 'reduction' in 'RDropLoss' is not 'sum', 'mean' 'batchmean', or 'none'."
msgstr ""
"计算方式 `reduction` 不是 `sum` , `mean` , `batchmean` 或 `none` 的其中一个。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/loss.py:docstring
#: of mindnlp.common.loss.RDropLoss.construct:16
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: mindnlp.common.metrics.perplexity:34
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:52
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:44
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: mindnlp.dataset.machine_translation.multi30k.Multi30k:28
#: mindnlp.dataset.machine_translation.multi30k.Multi30k_Process:22
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: mindnlp.dataset.question_answer.squad1.SQuAD1:21
#: mindnlp.dataset.question_answer.squad1.SQuAD1_Process:36
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad2.py:docstring
#: mindnlp.dataset.question_answer.squad2.SQuAD2:21
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking:19
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking_Process:25
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/udpos.py:docstring
#: mindnlp.dataset.sequence_tagging.udpos.UDPOS:19
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: mindnlp.dataset.text_classification.agnews.AG_NEWS:19
#: mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:30
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull:19
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity:19
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: mindnlp.dataset.text_classification.cola.CoLA:19
#: mindnlp.dataset.text_classification.cola.CoLA_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: mindnlp.dataset.text_classification.dbpedia.DBpedia:19
#: mindnlp.dataset.text_classification.dbpedia.DBpedia_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: mindnlp.dataset.text_classification.imdb.IMDB:19
#: mindnlp.dataset.text_classification.imdb.IMDB_Process:26
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: mindnlp.dataset.text_classification.mnli.MNLI:19
#: mindnlp.dataset.text_classification.mnli.MNLI_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: mindnlp.dataset.text_classification.mrpc.MRPC:19
#: mindnlp.dataset.text_classification.mrpc.MRPC_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: mindnlp.dataset.text_classification.qnli.QNLI:19
#: mindnlp.dataset.text_classification.qnli.QNLI_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: mindnlp.dataset.text_classification.qqp.QQP:16
#: mindnlp.dataset.text_classification.qqp.QQP_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: mindnlp.dataset.text_classification.rte.RTE:19
#: mindnlp.dataset.text_classification.rte.RTE_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sogounews.py:docstring
#: mindnlp.dataset.text_classification.sogounews.SogouNews:19
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: mindnlp.dataset.text_classification.sst2.SST2:19
#: mindnlp.dataset.text_classification.sst2.SST2_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: mindnlp.dataset.text_classification.stsb.STSB:19
#: mindnlp.dataset.text_classification.stsb.STSB_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.WNLI:19
#: mindnlp.dataset.text_classification.wnli.WNLI_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers:19
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull:19
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity:19
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/lcsts.py:docstring
#: mindnlp.dataset.text_generation.lcsts.LCSTS:21
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/penntreebank.py:docstring
#: mindnlp.dataset.text_generation.penntreebank.PennTreebank:21
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext103.py:docstring
#: mindnlp.dataset.text_generation.wikitext103.WikiText103:21
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext2.py:docstring
#: mindnlp.dataset.text_generation.wikitext2.WikiText2:21
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity:18
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: mindnlp.modules.attentions.AdditiveAttention:15
#: mindnlp.modules.attentions.BinaryAttention:16
#: mindnlp.modules.attentions.CosineAttention:15
#: mindnlp.modules.attentions.LinearAttention:14
#: mindnlp.modules.attentions.LocationAwareAttention:10
#: mindnlp.modules.attentions.MutiHeadAttention:18
#: mindnlp.modules.attentions.ScaledDotAttention:13
#: mindnlp.modules.attentions.SelfAttention:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: mindnlp.modules.decoder.rnn_decoder.RNNDecoder:19
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: mindnlp.modules.embeddings.fasttext_embedding.Fasttext:13
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove:13
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec:13
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: mindnlp.modules.encoder.cnn_encoder.CNNEncoder:23
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: mindnlp.modules.encoder.rnn_encoder.RNNEncoder:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: mindnlp.utils.decompress.untar:16
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: mindnlp.utils.download.cache_file:28 mindnlp.utils.download.cached_path:26
#: mindnlp.utils.download.check_md5:14 mindnlp.utils.download.get_cache_path:8
#: mindnlp.utils.download.get_dataset_url:12
#: mindnlp.utils.download.get_filepath:15
#: mindnlp.utils.download.get_from_cache:25 mindnlp.utils.download.http_get:21
#: mindnlp.utils.download.match_file:20
msgid "Examples"
msgstr ""

#: ../../api/common.rst:22
msgid "metrics"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics:1
msgid "\"Functions for Metrics"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.accuracy:1
msgid "Calculates the accuracy. The function is shown as follows:"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.accuracy:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: mindnlp.engine.metrics.accuracy.Accuracy:3
msgid ""
"\\text{ACC} =\\frac{\\text{TP} + \\text{TN}}\n"
"{\\text{TP} + \\text{TN} + \\text{FP} + \\text{FN}}"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.accuracy:8
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: mindnlp.engine.metrics.accuracy.Accuracy:8
msgid ""
"where `ACC` is accuracy, `TP` is the number of true posistive cases, `TN` is "
"the number of true negative cases, `FP` is the number of false posistive "
"cases, `FN` is the number of false negative cases."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.accuracy:12 mindnlp.common.metrics.f1_score:12
#: mindnlp.common.metrics.perplexity:11 mindnlp.common.metrics.precision:12
#: mindnlp.common.metrics.recall:10
msgid ""
"Predicted value. `preds` is a list of floating numbers in range :math:`[0, "
"1]` and the shape of `preds` is :math:`(N, C)` in most cases (not strictly), "
"where :math:`N` is the number of cases and :math:`C` is the number of "
"categories."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.accuracy:17 mindnlp.common.metrics.f1_score:17
#: mindnlp.common.metrics.matthews_correlation:19
#: mindnlp.common.metrics.perplexity:16 mindnlp.common.metrics.precision:17
#: mindnlp.common.metrics.recall:15
msgid ""
"Ground truth. `labels` must be in one-hot format that shape is :math:`(N, "
"C)`, or can be transformed to one-hot format that shape is :math:`(N,)`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.accuracy:22
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: mindnlp.engine.metrics.accuracy.Accuracy.eval:3
msgid "- **acc** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.accuracy:24
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: mindnlp.engine.metrics.accuracy.Accuracy.eval:5
msgid "**acc** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.accuracy:26
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: mindnlp.engine.metrics.accuracy.Accuracy.eval:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: mindnlp.engine.metrics.f1.F1Score.eval:7
msgid "If the number of samples is 0."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.bleu:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore:1
msgid ""
"Calculates the BLEU score. BLEU (bilingual evaluation understudy) is a "
"metric for evaluating the quality of text translated by machine. It uses a "
"modified form of precision to compare a candidate translation against "
"multiple reference translations. The function is shown as follows:"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.bleu:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore:6
msgid ""
"BP & =\n"
"\\begin{cases}\n"
"1,  & \\text{if }c>r \\\\\n"
"e_{1-r/c}, & \\text{if }c\\leq r\n"
"\\end{cases}\n"
"\n"
"BLEU & = BP\\exp(\\sum_{n=1}^N w_{n} \\log{p_{n}})"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.bleu:16
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore:16
msgid ""
"where `c` is the length of candidate sentence, and `r` is the length of "
"reference sentence."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.bleu:18 mindnlp.common.metrics.rouge_n:6
msgid "A list of tokenized candidate sentences."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.bleu:20 mindnlp.common.metrics.rouge_l:19
#: mindnlp.common.metrics.rouge_n:8
msgid "A list of lists of tokenized true sentences."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.bleu:22
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore:18
msgid "N_gram value ranges from 1 to 4. Default: 4."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.bleu:24
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore:20
msgid "Weights of precision of each gram. Defaults to None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.bleu:27
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore.eval:3
msgid "- **bleu_score** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.bleu:29
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore.eval:5
msgid "**bleu_score** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.bleu:31
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore:25
msgid "If the value range of `n_size` is not from 1 to 4."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.bleu:32
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore.update:9
msgid "If the lengths of `cand` and `ref_list` are not equal."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.bleu:33
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore:26
msgid "If the lengths of `weights` is not equal to `n_size`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.confusion_matrix:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix:1
msgid ""
"Calculates the confusion matrix. Confusion matrix is commonly used to "
"evaluate the performance of classification models, including binary "
"classification and multiple classification."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.confusion_matrix:5
msgid ""
"Predicted value. `preds` is a list of floating numbers and the shape of "
"`preds` is :math:`(N, C)` or :math:`(N,)`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.confusion_matrix:8
msgid "Ground truth. The shape of `labels` is :math:`(N,)`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.confusion_matrix:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix:5
msgid "Number of classes in the dataset. Default: 2."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.confusion_matrix:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix.eval:3
msgid "- **conf_mat** (np.ndarray) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.confusion_matrix:16
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix.eval:5
msgid "**conf_mat** (np.ndarray) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.confusion_matrix:18
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix.update:11
msgid "If `preds` and `labels` do not have valid dimensions."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.distinct:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: mindnlp.engine.metrics.distinct.Distinct:1
msgid ""
"Calculates the Distinct-N. Distinct-N is a metric that measures the "
"diversity of a sentence. It focuses on the number of distinct n-gram of a "
"sentence. The larger the number of distinct n-grams, the higher the "
"diversity of the text. The function is shown as follows:"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.distinct:6 mindnlp.common.metrics.rouge_l:17
msgid "A list of tokenized candidate sentence."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.distinct:8
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: mindnlp.engine.metrics.distinct.Distinct:6
msgid "N_gram value. Defaults: 2."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.distinct:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: mindnlp.engine.metrics.distinct.Distinct.eval:3
msgid "- **distinct_score** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.distinct:13
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: mindnlp.engine.metrics.distinct.Distinct.eval:5
msgid "**distinct_score** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.em_score:1
msgid ""
"Calculates the exact match (EM) score. This metric measures the percentage "
"of predictions that match any one of the ground truth exactly."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.em_score:4
msgid "Predicted value."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.em_score:6
msgid "Ground truth."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.em_score:9
msgid "- **exact_match** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.em_score:11
msgid "**exact_match** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.em_score:13
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: mindnlp.engine.metrics.em_score.EmScore.update:9
msgid "If `preds` and `examples` have different lengths."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.f1_score:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: mindnlp.engine.metrics.f1.F1Score:1
msgid ""
"Calculates the F1 score. Fbeta score is a weighted mean of precision and "
"recall, and F1 score is a special case of Fbeta when beta is 1. The function "
"is shown as follows:"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.f1_score:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: mindnlp.engine.metrics.f1.F1Score:5
msgid "F_1=\\frac{2\\cdot TP}{2\\cdot TP + FN + FP}"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.f1_score:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: mindnlp.engine.metrics.f1.F1Score:9
msgid ""
"where `TP` is the number of true posistive cases, `FN` is the number of "
"false negative cases, `FP` is the number of false positive cases."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.f1_score:22
msgid "- **f1_s** (np.ndarray) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.f1_score:24
msgid "**f1_s** (np.ndarray) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.f1_score:26 mindnlp.common.metrics.precision:26
#: mindnlp.common.metrics.recall:24
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: mindnlp.engine.metrics.f1.F1Score.update:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: mindnlp.engine.metrics.precision.Precision.update:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall.update:14
msgid "If `preds` doesn't have the same classes number as `labels`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.matthews_correlation:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation:1
msgid ""
"Calculates the Matthews correlation coefficient (MCC). MCC is in essence a "
"correlation coefficient between the observed and predicted binary "
"classifications; it returns a value between −1 and +1. A coefficient of +1 "
"represents a perfect prediction, 0 no better than random prediction and −1 "
"indicates total disagreement between prediction and observation. The "
"function is shown as follows:"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.matthews_correlation:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation:7
msgid ""
"MCC=\\frac{TP \\times TN-FP \\times FN}{\\sqrt{(TP+FP)(TP+FN)(TN+FP)(TN+FN)}}"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.matthews_correlation:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation:11
msgid ""
"where `TP` is the number of true posistive cases, `TN` is the number of true "
"negative cases, `FN` is the number of false negative cases, `FP` is the "
"number of false positive cases."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.matthews_correlation:14
msgid ""
"Predicted value. `preds` is a list of floating numbers and the shape of "
"`preds` is :math:`(N, C)` in most cases (not strictly), where :math:`N` is "
"the number of cases and :math:`C` is the number of categories."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.matthews_correlation:24
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation.eval:3
msgid "- **m_c_c** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.matthews_correlation:26
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation.eval:5
msgid "**m_c_c** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.pearson_correlation:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: mindnlp.engine.metrics.pearson.PearsonCorrelation:1
msgid ""
"Calculates the Pearson correlation coefficient (PCC). PCC is a measure of "
"linear correlation between two sets of data. It is the ratio between the "
"covariance of two variables and the product of their standard deviations; "
"thus, it is essentially a normalized measurement of the covariance, such "
"that the result always has a value between −1 and 1."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.pearson_correlation:7
#: mindnlp.common.metrics.spearman_correlation:8
msgid ""
"Predicted value. `preds` is a list of floating numbers and the shape of "
"`preds` is :math:`(N, 1)`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.pearson_correlation:10
#: mindnlp.common.metrics.spearman_correlation:11
msgid ""
"Ground truth. `labels` is a list of floating numbers and the shape of "
"`preds` is :math:`(N, 1)`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.pearson_correlation:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: mindnlp.engine.metrics.pearson.PearsonCorrelation.eval:3
msgid "- **p_c_c** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.pearson_correlation:16
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: mindnlp.engine.metrics.pearson.PearsonCorrelation.eval:5
msgid "**p_c_c** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.pearson_correlation:18
#: mindnlp.common.metrics.perplexity:29
#: mindnlp.common.metrics.spearman_correlation:19
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: mindnlp.engine.metrics.pearson.PearsonCorrelation.update:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity.update:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation.update:11
msgid "If `preds` and `labels` have different lengths."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.perplexity:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity:1
msgid ""
"Calculates the perplexity. Perplexity is a measure of how well a "
"probabilibity model predicts a sample. A low perplexity indicates the model "
"is good at predicting the sample. The function is shown as follows:"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.perplexity:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity:5
msgid ""
"PP(W)=P(w_{1}w_{2}...w_{N})^{-\\frac{1}{N}}=\\sqrt[N]{\\frac{1}{P(w_{1}"
"w_{2}...w_{N})}}"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.perplexity:9
msgid "where :math:`w` represents words in corpus."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.perplexity:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity:11
msgid ""
"Index of an invalid label to be ignored when counting. If set to `None`, it "
"means there's no invalid label. Default: None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.perplexity:25
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity.eval:3
msgid "- **ppl** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.perplexity:27
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity.eval:5
msgid "**ppl** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.perplexity:30
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity.update:15
msgid "If `pred` and `label` have different shapes."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.perplexity:31
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity.eval:7
msgid "If the sample size is 0."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.precision:1
msgid ""
"Calculates the precision. Precision (also known as positive predictive "
"value) is the actual positive proportion in the predicted positive sample. "
"It can only be used to evaluate the precision score of binary tasks. The "
"function is shown as follows:"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.precision:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: mindnlp.engine.metrics.precision.Precision:5
msgid "\\text{Precision} =\\frac{\\text{TP}} {\\text{TP} + \\text{FP}}"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.precision:10
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: mindnlp.engine.metrics.precision.Precision:9
msgid ""
"where `TP` is the number of true posistive cases, `FP` is the number of "
"false posistive cases."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.precision:22
msgid "- **prec** (np.ndarray) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.precision:24
msgid "**prec** (np.ndarray) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.recall:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall:1
msgid ""
"Calculates the recall. Recall is also referred to as the true positive rate "
"or sensitivity. The function is shown as follows:"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.recall:4
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall:4
msgid "\\text{Recall} =\\frac{\\text{TP}} {\\text{TP} + \\text{FN}}"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.recall:8
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall:8
msgid ""
"where `TP` is the number of true posistive cases, `FN` is the number of "
"false negative cases."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.recall:20
msgid "- **rec** (np.ndarray) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.recall:22
msgid "**rec** (np.ndarray) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.rouge_l:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeL:1
msgid ""
"Calculates the ROUGE-L score. ROUGE (Recall-Oriented Understudy for Gisting "
"Evaluation) is a set of metrics used for evaluating automatic summarization "
"and machine translation models. ROUGE-L is calculated based on Longest "
"Common Subsequence (LCS). The function is shown as follows:"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.rouge_l:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeL:6
msgid ""
"R_{l c s}=\\frac{L C S(X, Y)}{m}\n"
"\n"
"p_{l c s}=\\frac{L C S(X, Y)}{n}\n"
"\n"
"F_{l c s}=\\frac{\\left(1+\\beta^{2}\\right) R_{l c s} P_{l c s}}{R_{l c s}+"
"\\beta^{2} P_{l c s}}"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.rouge_l:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeL:14
msgid ""
"where `X` is the candidate sentence, `Y` is the reference sentence. `m` and "
"`n` represent the length of `X` and `Y` respectively. `LCS` means the "
"longest common subsequence."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.rouge_l:21
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeL:17
msgid "A hyperparameter to decide the weight of recall. Defaults: 1.2."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.rouge_l:24
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeL.eval:3
msgid "- **rougel_score** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.rouge_l:26
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeL.eval:5
msgid "**rougel_score** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.rouge_n:1
msgid ""
"Calculates the ROUGE-N score. ROUGE (Recall-Oriented Understudy for Gisting "
"Evaluation) is a set of metrics used for evaluating automatic summarization "
"and machine translation models. ROUGE-N refers to the overlap of n-grams "
"between candidates and reference summaries."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.rouge_n:10
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeN:5
msgid "N_gram value. Default: 1."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.rouge_n:13
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeN.eval:3
msgid "- **rougen_score** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.rouge_n:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeN.eval:5
msgid "**rougen_score** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.rouge_n:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeN.eval:7
msgid "If the reference size is 0."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.spearman_correlation:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation:1
msgid ""
"Calculates the Spearman's rank correlation coefficient (SRCC). It is a "
"nonparametric measure of rank correlation (statistical dependence between "
"the rankings of two variables). It assesses how well the relationship "
"between two variables can be described using a monotonic function. If there "
"are no repeated data values, a perfect Spearman correlation of +1 or −1 "
"occurs when each of the variables is a perfect monotone function of the "
"other."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.spearman_correlation:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation.eval:3
msgid "- **s_r_c_c** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/common/metrics.py:docstring
#: of mindnlp.common.metrics.spearman_correlation:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation.eval:5
msgid "**s_r_c_c** (float) - The computed result."
msgstr ""

#: ../../api/dataset.rst:2
msgid "Dataset"
msgstr ""

#: ../../api/dataset/machine_translation.rst:2
msgid "Machine Translation"
msgstr ""

#: ../../api/dataset/machine_translation.rst:6
msgid "iwslt2016"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016:1
msgid "IWSLT2016 load function"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:1
msgid "Load the IWSLT2016 dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:3
msgid "The available datasets include following:"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:5
msgid "**Language pairs**:"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:8
#: mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:10
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:8
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:10
msgid "\"en\""
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:8
#: mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:12
msgid "\"fr\""
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:8
#: mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:8
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:14
msgid "\"de\""
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:8
#: mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:16
msgid "\"cs\""
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:8
#: mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:18
msgid "\"ar\""
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:10
#: mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:12
#: mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:14
#: mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:16
#: mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:18
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:10
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:12
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:14
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:16
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:18
msgid "x"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:21
msgid ""
"**valid/test sets**: [\"dev2010\", \"tst2010\", \"tst2011\", \"tst2012\", "
"\"tst2013\", \"tst2014\"]"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:23
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:21
msgid "Directory where the datasets are saved. Default: \"~/.mindnlp\""
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:25
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:23
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: mindnlp.dataset.machine_translation.multi30k.Multi30k:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/penntreebank.py:docstring
#: mindnlp.dataset.text_generation.penntreebank.PennTreebank:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext103.py:docstring
#: mindnlp.dataset.text_generation.wikitext103.WikiText103:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext2.py:docstring
#: mindnlp.dataset.text_generation.wikitext2.WikiText2:5
msgid "Split or splits to be returned. Default:('train', 'valid', 'test')."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:28
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:26
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: mindnlp.dataset.machine_translation.multi30k.Multi30k:9
msgid "Tuple containing src and tgt language. Default: ('de', 'en')."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:30
msgid "a string to identify validation set. Default: \"tst2013\"."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:32
msgid "a string to identify test set. Default: \"tst2014\"."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:34
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:28
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: mindnlp.dataset.machine_translation.multi30k.Multi30k:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: mindnlp.dataset.question_answer.squad1.SQuAD1:8
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad2.py:docstring
#: mindnlp.dataset.question_answer.squad2.SQuAD2:8
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/udpos.py:docstring
#: mindnlp.dataset.sequence_tagging.udpos.UDPOS:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: mindnlp.dataset.text_classification.agnews.AG_NEWS:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: mindnlp.dataset.text_classification.cola.CoLA:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: mindnlp.dataset.text_classification.dbpedia.DBpedia:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: mindnlp.dataset.text_classification.imdb.IMDB:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: mindnlp.dataset.text_classification.mnli.MNLI:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: mindnlp.dataset.text_classification.mrpc.MRPC:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: mindnlp.dataset.text_classification.qnli.QNLI:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: mindnlp.dataset.text_classification.qqp.QQP:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: mindnlp.dataset.text_classification.rte.RTE:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sogounews.py:docstring
#: mindnlp.dataset.text_classification.sogounews.SogouNews:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: mindnlp.dataset.text_classification.sst2.SST2:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: mindnlp.dataset.text_classification.stsb.STSB:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.WNLI:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/lcsts.py:docstring
#: mindnlp.dataset.text_generation.lcsts.LCSTS:8
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/penntreebank.py:docstring
#: mindnlp.dataset.text_generation.penntreebank.PennTreebank:8
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext103.py:docstring
#: mindnlp.dataset.text_generation.wikitext103.WikiText103:8
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext2.py:docstring
#: mindnlp.dataset.text_generation.wikitext2.WikiText2:8
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: mindnlp.utils.download.cache_file:14 mindnlp.utils.download.cached_path:14
#: mindnlp.utils.download.get_from_cache:12 mindnlp.utils.download.http_get:12
msgid ""
"a dict to identify proxies,for example: {\"https\": "
"\"https://127.0.0.1:7890\"}."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:37
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:31
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: mindnlp.dataset.machine_translation.multi30k.Multi30k:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: mindnlp.dataset.question_answer.squad1.SQuAD1:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad2.py:docstring
#: mindnlp.dataset.question_answer.squad2.SQuAD2:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/udpos.py:docstring
#: mindnlp.dataset.sequence_tagging.udpos.UDPOS:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: mindnlp.dataset.text_classification.agnews.AG_NEWS:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: mindnlp.dataset.text_classification.cola.CoLA:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: mindnlp.dataset.text_classification.dbpedia.DBpedia:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: mindnlp.dataset.text_classification.imdb.IMDB:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: mindnlp.dataset.text_classification.mnli.MNLI:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: mindnlp.dataset.text_classification.mrpc.MRPC:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: mindnlp.dataset.text_classification.qnli.QNLI:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: mindnlp.dataset.text_classification.qqp.QQP:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: mindnlp.dataset.text_classification.rte.RTE:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sogounews.py:docstring
#: mindnlp.dataset.text_classification.sogounews.SogouNews:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: mindnlp.dataset.text_classification.sst2.SST2:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: mindnlp.dataset.text_classification.stsb.STSB:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.WNLI:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/lcsts.py:docstring
#: mindnlp.dataset.text_generation.lcsts.LCSTS:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/penntreebank.py:docstring
#: mindnlp.dataset.text_generation.penntreebank.PennTreebank:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext103.py:docstring
#: mindnlp.dataset.text_generation.wikitext103.WikiText103:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext2.py:docstring
#: mindnlp.dataset.text_generation.wikitext2.WikiText2:11
msgid ""
"- **datasets_list** (list) -A list of loaded datasets.   If only one type of "
"dataset is specified,such as 'trian',   this dataset is returned instead of "
"a list of datasets."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:39
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:33
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: mindnlp.dataset.machine_translation.multi30k.Multi30k:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: mindnlp.dataset.question_answer.squad1.SQuAD1:13
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad2.py:docstring
#: mindnlp.dataset.question_answer.squad2.SQuAD2:13
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/udpos.py:docstring
#: mindnlp.dataset.sequence_tagging.udpos.UDPOS:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: mindnlp.dataset.text_classification.agnews.AG_NEWS:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: mindnlp.dataset.text_classification.cola.CoLA:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: mindnlp.dataset.text_classification.dbpedia.DBpedia:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: mindnlp.dataset.text_classification.imdb.IMDB:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: mindnlp.dataset.text_classification.mnli.MNLI:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: mindnlp.dataset.text_classification.mrpc.MRPC:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: mindnlp.dataset.text_classification.qnli.QNLI:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: mindnlp.dataset.text_classification.qqp.QQP:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: mindnlp.dataset.text_classification.rte.RTE:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sogounews.py:docstring
#: mindnlp.dataset.text_classification.sogounews.SogouNews:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: mindnlp.dataset.text_classification.sst2.SST2:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: mindnlp.dataset.text_classification.stsb.STSB:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.WNLI:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/lcsts.py:docstring
#: mindnlp.dataset.text_generation.lcsts.LCSTS:13
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/penntreebank.py:docstring
#: mindnlp.dataset.text_generation.penntreebank.PennTreebank:13
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext103.py:docstring
#: mindnlp.dataset.text_generation.wikitext103.WikiText103:13
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext2.py:docstring
#: mindnlp.dataset.text_generation.wikitext2.WikiText2:13
msgid ""
"**datasets_list** (list) -A list of loaded datasets. If only one type of "
"dataset is specified,such as 'trian', this dataset is returned instead of a "
"list of datasets."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:43
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:37
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: mindnlp.dataset.machine_translation.multi30k.Multi30k:21
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: mindnlp.dataset.question_answer.squad1.SQuAD1:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad2.py:docstring
#: mindnlp.dataset.question_answer.squad2.SQuAD2:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/lcsts.py:docstring
#: mindnlp.dataset.text_generation.lcsts.LCSTS:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/penntreebank.py:docstring
#: mindnlp.dataset.text_generation.penntreebank.PennTreebank:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext103.py:docstring
#: mindnlp.dataset.text_generation.wikitext103.WikiText103:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext2.py:docstring
#: mindnlp.dataset.text_generation.wikitext2.WikiText2:17
msgid "If `root` is not a string."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:44
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:38
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: mindnlp.dataset.machine_translation.multi30k.Multi30k:22
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: mindnlp.dataset.question_answer.squad1.SQuAD1:18
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad2.py:docstring
#: mindnlp.dataset.question_answer.squad2.SQuAD2:18
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/lcsts.py:docstring
#: mindnlp.dataset.text_generation.lcsts.LCSTS:18
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/penntreebank.py:docstring
#: mindnlp.dataset.text_generation.penntreebank.PennTreebank:18
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext103.py:docstring
#: mindnlp.dataset.text_generation.wikitext103.WikiText103:18
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext2.py:docstring
#: mindnlp.dataset.text_generation.wikitext2.WikiText2:18
msgid "If `split` is not a string or Tuple[str]."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:45
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:39
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: mindnlp.dataset.machine_translation.multi30k.Multi30k:23
msgid "If `language_pair` is not a Tuple[str]."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:46
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:40
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: mindnlp.dataset.machine_translation.multi30k.Multi30k:24
msgid "If the length of `language_pair` is not 2."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:47
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:41
msgid "If `language_pair` is not in the range of supported datasets."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:48
msgid "If `valid_set` is not in the range of supported datasets."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2016.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2016.IWSLT2016:49
msgid "If `test_set` is not in the range of supported datasets."
msgstr ""

#: ../../api/dataset/machine_translation.rst:14
msgid "iwslt2017"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2017:1
msgid "IWSLT2017 load function"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:1
msgid "Load the IWSLT2017 dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:8
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:12
msgid "\"nl\""
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:8
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:16
msgid "\"it\""
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:8
#: mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017:18
msgid "\"ro\""
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017_Process:1
msgid ""
"a function transforms specific language column in IWSLT2017 dataset into "
"tensors"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017_Process:3
msgid "IWSLT2017 dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017_Process:5
msgid "The language column name in IWSLT2017"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017_Process:7
msgid "Tokenizer you what to used"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017_Process:9
msgid ""
"The vocab you use, defaults to None. If None, a new vocab will be created."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017_Process:12
msgid ""
"- MapDataset, dataset after process. - Vocab, new vocab created from dataset "
"if 'vocab' is None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017_Process:14
msgid "MapDataset, dataset after process."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017_Process:15
msgid "Vocab, new vocab created from dataset if 'vocab' is None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/iwslt2017.py:docstring
#: of mindnlp.dataset.machine_translation.iwslt2017.IWSLT2017_Process:17
msgid "If `language` is not string."
msgstr ""

#: ../../api/dataset/machine_translation.rst:22
msgid "multi30k"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: of mindnlp.dataset.machine_translation.multi30k:1
msgid "Multi30k load function"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: of mindnlp.dataset.machine_translation.multi30k.Multi30k:1
msgid "Load the Multi30k dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: of mindnlp.dataset.machine_translation.multi30k.Multi30k:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/udpos.py:docstring
#: mindnlp.dataset.sequence_tagging.udpos.UDPOS:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: mindnlp.dataset.text_classification.agnews.AG_NEWS:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: mindnlp.dataset.text_classification.cola.CoLA:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: mindnlp.dataset.text_classification.dbpedia.DBpedia:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: mindnlp.dataset.text_classification.imdb.IMDB:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: mindnlp.dataset.text_classification.mnli.MNLI:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: mindnlp.dataset.text_classification.mrpc.MRPC:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: mindnlp.dataset.text_classification.qnli.QNLI:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: mindnlp.dataset.text_classification.qqp.QQP:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: mindnlp.dataset.text_classification.rte.RTE:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sogounews.py:docstring
#: mindnlp.dataset.text_classification.sogounews.SogouNews:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: mindnlp.dataset.text_classification.sst2.SST2:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: mindnlp.dataset.text_classification.stsb.STSB:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.WNLI:3
msgid "Directory where the datasets are saved. Default:~/.mindnlp"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: of mindnlp.dataset.machine_translation.multi30k.Multi30k:25
msgid "If `language_pair` is neither ('de', 'en') nor ('en', 'de')."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: of mindnlp.dataset.machine_translation.multi30k.Multi30k_Process:1
msgid "the process of the Multi30k dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: of mindnlp.dataset.machine_translation.multi30k.Multi30k_Process:3
msgid "Multi30k dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: of mindnlp.dataset.machine_translation.multi30k.Multi30k_Process:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking_Process:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull_Process:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity_Process:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: mindnlp.dataset.text_classification.cola.CoLA_Process:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: mindnlp.dataset.text_classification.dbpedia.DBpedia_Process:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: mindnlp.dataset.text_classification.imdb.IMDB_Process:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: mindnlp.dataset.text_classification.sst2.SST2_Process:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers_Process:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull_Process:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity_Process:9
msgid "vocabulary object, used to store the mapping of token and index."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: of mindnlp.dataset.machine_translation.multi30k.Multi30k_Process:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: mindnlp.dataset.question_answer.squad1.SQuAD1_Process:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking_Process:7
msgid "The number of rows each batch is created with. Default: 64."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: of mindnlp.dataset.machine_translation.multi30k.Multi30k_Process:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking_Process:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:14
#, fuzzy
#| msgid "The dimension of the pretrained vector. Default: 300."
msgid "The max length of the sentence. Default: 500."
msgstr "预训练词向量的维度.默认值：300."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: of mindnlp.dataset.machine_translation.multi30k.Multi30k_Process:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: mindnlp.dataset.question_answer.squad1.SQuAD1_Process:19
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking_Process:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:18
msgid ""
"When the last batch of data contains a data entry smaller than batch_size, "
"whether to discard the batch and not pass it to the next operation. Default: "
"False."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: of mindnlp.dataset.machine_translation.multi30k.Multi30k_Process:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking_Process:18
msgid "- **dataset** (MapDataset) - dataset after transforms."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: of mindnlp.dataset.machine_translation.multi30k.Multi30k_Process:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:24
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull_Process:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity_Process:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: mindnlp.dataset.text_classification.cola.CoLA_Process:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: mindnlp.dataset.text_classification.dbpedia.DBpedia_Process:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: mindnlp.dataset.text_classification.imdb.IMDB_Process:20
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: mindnlp.dataset.text_classification.sst2.SST2_Process:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers_Process:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull_Process:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity_Process:14
msgid "**dataset** (MapDataset) - dataset after transforms."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/multi30k.py:docstring
#: of mindnlp.dataset.machine_translation.multi30k.Multi30k_Process:19
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking_Process:22
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:27
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull_Process:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity_Process:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: mindnlp.dataset.text_classification.cola.CoLA_Process:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: mindnlp.dataset.text_classification.dbpedia.DBpedia_Process:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: mindnlp.dataset.text_classification.imdb.IMDB_Process:23
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: mindnlp.dataset.text_classification.sst2.SST2_Process:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers_Process:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull_Process:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity_Process:17
msgid "If `input_column` is not a string."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/machine_translation/__init__.py:docstring
#: of mindnlp.dataset.machine_translation:1
msgid "MachineTranslation dataset init"
msgstr ""

#: ../../api/dataset/question_answer.rst:2
msgid "Question Answer"
msgstr ""

#: ../../api/dataset/question_answer.rst:6
msgid "squad1"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1:1
msgid "SQuAD1 load function"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1:1
msgid "Load the SQuAD1 dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad2.py:docstring
#: mindnlp.dataset.question_answer.squad2.SQuAD2:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/lcsts.py:docstring
#: mindnlp.dataset.text_generation.lcsts.LCSTS:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/penntreebank.py:docstring
#: mindnlp.dataset.text_generation.penntreebank.PennTreebank:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext103.py:docstring
#: mindnlp.dataset.text_generation.wikitext103.WikiText103:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext2.py:docstring
#: mindnlp.dataset.text_generation.wikitext2.WikiText2:3
msgid "Directory where the datasets are saved."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad2.py:docstring
#: mindnlp.dataset.question_answer.squad2.SQuAD2:5
msgid "Split or splits to be returned. Default:('train','dev')."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:1
msgid "the process of the squad1 dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:3
msgid "Squad1 dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:5
msgid "Tokenizer you choose to tokenize the text dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:7
msgid ""
"Vocabulary object of words, used to store the mapping of the token and index."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:9
msgid ""
"Vocabulary object of chars, used to store the mapping of the token and index."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:11
msgid "Max length of the context. Default: 768."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:13
msgid "Max length of the question. Default: 64."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:15
msgid "Max length of the char. Default: 48."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:23
msgid "- MapDataset, Squad1 Dataset after process."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:25
msgid "MapDataset, Squad1 Dataset after process."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:27
msgid "If `word_vocab` is not of type text.Vocab."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:28
msgid "If `char_vocab` is not of type text.Vocab."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:29
msgid "If `max_context_len` is not of type int."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:30
msgid "If `max_question_len` is not of type int."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:31
msgid "If `max_char_len` is not of type int."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:32
msgid "If `batch_size` is not of type int."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.SQuAD1_Process:33
msgid "If `drop_remainder` is not of type bool."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad1.py:docstring
#: of mindnlp.dataset.question_answer.squad1.Squad1:1
msgid "SQuAD1 dataset source"
msgstr ""

#: ../../api/dataset/question_answer.rst:14
msgid "squad2"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad2.py:docstring
#: of mindnlp.dataset.question_answer.squad2:1
msgid "SQuAD2 load function"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad2.py:docstring
#: of mindnlp.dataset.question_answer.squad2.SQuAD2:1
msgid "Load the SQuAD2 dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/squad2.py:docstring
#: of mindnlp.dataset.question_answer.squad2.Squad2:1
msgid "SQuAD2 dataset source"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/question_answer/__init__.py:docstring
#: of mindnlp.dataset.question_answer:1
msgid "QuestionAnswer dataset init"
msgstr ""

#: ../../api/dataset/registered.rst:2
msgid "Registered Function"
msgstr ""

#: ../../api/dataset/sequence_tagging.rst:2
msgid "Sequence Tagging"
msgstr ""

#: ../../api/dataset/sequence_tagging.rst:6
msgid "conll2000chunking"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: of mindnlp.dataset.sequence_tagging.conll2000chunking:1
msgid "CoNLL2000Chunking load function"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: of mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking:1
msgid "Load the CoNLL2000Chunking dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: of mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: mindnlp.dataset.text_classification.agnews.AG_NEWS:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: mindnlp.dataset.text_classification.dbpedia.DBpedia:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: mindnlp.dataset.text_classification.imdb.IMDB:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: mindnlp.dataset.text_classification.mrpc.MRPC:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sogounews.py:docstring
#: mindnlp.dataset.text_classification.sogounews.SogouNews:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity:6
msgid "Split or splits to be returned. Default:('train', 'test')."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: of
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking_Process:1
msgid "the process of the CoNLL2000Chunking dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: of
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking_Process:3
msgid "CoNLL2000Chunking dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: of
#: mindnlp.dataset.sequence_tagging.conll2000chunking.CoNLL2000Chunking_Process:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:9
msgid ""
"A list consisting of the upper boundaries of the buckets. Must be strictly "
"increasing. Default: None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/conll2000chunking.py:docstring
#: of mindnlp.dataset.sequence_tagging.conll2000chunking.Conll2000chunking:1
msgid "CoNLL2000Chunking dataset source"
msgstr ""

#: ../../api/dataset/sequence_tagging.rst:14
msgid "udpos"
msgstr "udpos"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/udpos.py:docstring
#: of mindnlp.dataset.sequence_tagging.udpos:1
msgid "UDPOS dataset"
msgstr "UDPOS数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/udpos.py:docstring
#: of mindnlp.dataset.sequence_tagging.udpos.UDPOS:1
msgid "Load the UDPOS dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/udpos.py:docstring
#: of mindnlp.dataset.sequence_tagging.udpos.UDPOS:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: mindnlp.dataset.text_classification.cola.CoLA:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: mindnlp.dataset.text_classification.qnli.QNLI:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: mindnlp.dataset.text_classification.rte.RTE:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: mindnlp.dataset.text_classification.sst2.SST2:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: mindnlp.dataset.text_classification.stsb.STSB:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.WNLI:6
msgid "Split or splits to be returned. Default:('train', 'dev', 'test')."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/udpos.py:docstring
#: of mindnlp.dataset.sequence_tagging.udpos.Udpos:1
msgid "UDPOS dataset source"
msgstr "UDPOS数据源"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/sequence_tagging/__init__.py:docstring
#: of mindnlp.dataset.sequence_tagging:1
msgid "SequenceTagging dataset init"
msgstr ""

#: ../../api/dataset/text_classification.rst:2
msgid "Text Classification"
msgstr "文本分类"

#: ../../api/dataset/text_classification.rst:6
msgid "agnews"
msgstr "agnews"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: of mindnlp.dataset.text_classification.agnews:1
msgid "AG_NEWS load function"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: of mindnlp.dataset.text_classification.agnews.AG_NEWS:1
msgid "Load the AG_NEWS dataset"
msgstr "加载AG_NEWS数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: of mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:1
msgid "the process of the AG_News dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: of mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:3
msgid "AG_News dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: of mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull_Process:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity_Process:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: mindnlp.dataset.text_classification.cola.CoLA_Process:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: mindnlp.dataset.text_classification.dbpedia.DBpedia_Process:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: mindnlp.dataset.text_classification.imdb.IMDB_Process:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: mindnlp.dataset.text_classification.sst2.SST2_Process:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers_Process:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull_Process:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity_Process:7
msgid "tokenizer you choose to tokenize the text dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: of mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:12
#, fuzzy
#| msgid "The name of the pretrained vector. Default: \"1M\"."
msgid "The number of rows each batch is created with. Default: 512."
msgstr "预训练词向量的名字.默认值：\"1M\"."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: of mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:16
msgid "the column needed to be transpormed of the agnews dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: of mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:22
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull_Process:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity_Process:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: mindnlp.dataset.text_classification.cola.CoLA_Process:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: mindnlp.dataset.text_classification.dbpedia.DBpedia_Process:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: mindnlp.dataset.text_classification.imdb.IMDB_Process:18
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: mindnlp.dataset.text_classification.sst2.SST2_Process:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers_Process:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull_Process:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity_Process:12
msgid ""
"- **dataset** (MapDataset) - dataset after transforms. - **Vocab** (Vocab) - "
"vocab created from dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: of mindnlp.dataset.text_classification.agnews.AG_NEWS_Process:25
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull_Process:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity_Process:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: mindnlp.dataset.text_classification.cola.CoLA_Process:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: mindnlp.dataset.text_classification.dbpedia.DBpedia_Process:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: mindnlp.dataset.text_classification.imdb.IMDB_Process:21
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: mindnlp.dataset.text_classification.mnli.MNLI_Process:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: mindnlp.dataset.text_classification.mrpc.MRPC_Process:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: mindnlp.dataset.text_classification.qnli.QNLI_Process:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: mindnlp.dataset.text_classification.qqp.QQP_Process:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: mindnlp.dataset.text_classification.rte.RTE_Process:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: mindnlp.dataset.text_classification.sst2.SST2_Process:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: mindnlp.dataset.text_classification.stsb.STSB_Process:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.WNLI_Process:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: mindnlp.dataset.text_classification.yahooanswers.YahooAnswers_Process:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull_Process:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity_Process:15
msgid "**Vocab** (Vocab) - vocab created from dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/agnews.py:docstring
#: of mindnlp.dataset.text_classification.agnews.Agnews:1
msgid "AG_NEWS dataset source"
msgstr "AG_NEWS数据源"

#: ../../api/dataset/text_classification.rst:14
msgid "amazonreviewfull"
msgstr "amazonreviewfull"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: of mindnlp.dataset.text_classification.amazonreviewfull:1
msgid "AmazonReviewFull dataset"
msgstr "AmazonReviewFull数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: of mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull:1
msgid "Load the AmazonReviewFull dataset"
msgstr "加载AmazonReviewFull数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: of
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull_Process:1
msgid "the process of the AmazonReviewFull dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: of
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull_Process:3
msgid "AmazonReviewFull dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: of
#: mindnlp.dataset.text_classification.amazonreviewfull.AmazonReviewFull_Process:5
msgid "the column needed to be transpormed of the AmazonReviewFull dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewfull.py:docstring
#: of mindnlp.dataset.text_classification.amazonreviewfull.Amazonreviewfull:1
msgid "AmazonReviewFull dataset source"
msgstr "AmazonReviewFull数据源"

#: ../../api/dataset/text_classification.rst:22
msgid "amazonreviewpolarity"
msgstr "amazonreviewpolarity"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: of mindnlp.dataset.text_classification.amazonreviewpolarity:1
msgid "AmazonReviewPolarity dataset"
msgstr "AmazonReviewPolarity数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: of
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity:1
msgid "Load the AmazonReviewPolarity datase"
msgstr "加载AmazonReviewPolarity数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: of
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity_Process:1
msgid "the process of the AmazonReviewPolarity dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: of
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity_Process:3
msgid "AmazonReviewPolarity dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: of
#: mindnlp.dataset.text_classification.amazonreviewpolarity.AmazonReviewPolarity_Process:5
msgid ""
"the column needed to be transpormed of the AmazonReviewPolarity dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/amazonreviewpolarity.py:docstring
#: of
#: mindnlp.dataset.text_classification.amazonreviewpolarity.Amazonreviewpolarity:1
msgid "AmazonReviewPolarity dataset source"
msgstr "AmazonReviewPolarity数据源"

#: ../../api/dataset/text_classification.rst:30
msgid "cola"
msgstr "cola"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: of mindnlp.dataset.text_classification.cola:1
msgid "CoLA dataset"
msgstr "CoLA数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: of mindnlp.dataset.text_classification.cola.CoLA:1
msgid "Load the CoLA dataset"
msgstr "加载CoLA数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: of mindnlp.dataset.text_classification.cola.CoLA_Process:1
msgid "the process of the CoLA dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: of mindnlp.dataset.text_classification.cola.CoLA_Process:3
msgid "CoLA dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: of mindnlp.dataset.text_classification.cola.CoLA_Process:5
msgid "the column needed to be transpormed of the CoLA dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/cola.py:docstring
#: of mindnlp.dataset.text_classification.cola.Cola:1
msgid "CoLA dataset source"
msgstr "CoLA数据源"

#: ../../api/dataset/text_classification.rst:38
msgid "dbpedia"
msgstr "dbpedia"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: of mindnlp.dataset.text_classification.dbpedia:1
msgid "DBpedia dataset"
msgstr "DBpedia数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: of mindnlp.dataset.text_classification.dbpedia.DBpedia:1
msgid "Load the DBpedia dataset"
msgstr "加载DBpedia数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: of mindnlp.dataset.text_classification.dbpedia.DBpedia_Process:1
msgid "the process of the DBpedia dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: of mindnlp.dataset.text_classification.dbpedia.DBpedia_Process:3
msgid "DBpedia dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: of mindnlp.dataset.text_classification.dbpedia.DBpedia_Process:5
msgid "the column needed to be transpormed of the DBpedia dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/dbpedia.py:docstring
#: of mindnlp.dataset.text_classification.dbpedia.Dbpedia:1
msgid "DBpedia dataset source"
msgstr "DBpedia数据源"

#: ../../api/dataset/text_classification.rst:46
msgid "imdb"
msgstr "imdb"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: of mindnlp.dataset.text_classification.imdb:1
msgid "IMDB dataset"
msgstr "IMDB数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: of mindnlp.dataset.text_classification.imdb.IMDB:1
msgid "Load the IMDB dataset"
msgstr "加载IMDB数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: of mindnlp.dataset.text_classification.imdb.IMDB_Process:1
msgid "the process of the IMDB dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: of mindnlp.dataset.text_classification.imdb.IMDB_Process:3
msgid "IMDB dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: of mindnlp.dataset.text_classification.imdb.IMDB_Process:9
msgid "size of the batch."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: of mindnlp.dataset.text_classification.imdb.IMDB_Process:11
msgid "max length of the sentence."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: of mindnlp.dataset.text_classification.imdb.IMDB_Process:13
msgid "A list consisting of the upper boundaries of the buckets."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: of mindnlp.dataset.text_classification.imdb.IMDB_Process:15
msgid ""
"If True, will drop the last batch for each bucket if it is not a full batch"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/imdb.py:docstring
#: of mindnlp.dataset.text_classification.imdb.Imdb:1
msgid "IMDB dataset source"
msgstr "IMDB数据源"

#: ../../api/dataset/text_classification.rst:54
msgid "mnli"
msgstr "mnli"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: of mindnlp.dataset.text_classification.mnli:1
msgid "MNLI dataset"
msgstr "MNLI数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: of mindnlp.dataset.text_classification.mnli.MNLI:1
msgid "Load the MNLI dataset"
msgstr "加载MNLI数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: of mindnlp.dataset.text_classification.mnli.MNLI:6
msgid ""
"Split or splits to be returned. Default:(\"train\", \"dev_matched\", "
"\"dev_mismatched\")."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: of mindnlp.dataset.text_classification.mnli.MNLI_Process:1
msgid "the process of the MNLI dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: of mindnlp.dataset.text_classification.mnli.MNLI_Process:3
msgid "MNLI dataset."
msgstr "MNLI数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: of mindnlp.dataset.text_classification.mnli.MNLI_Process:5
msgid "the column or columns needed to be transpormed of the MNLI dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: of mindnlp.dataset.text_classification.mnli.MNLI_Process:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: mindnlp.dataset.text_classification.mrpc.MRPC_Process:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: mindnlp.dataset.text_classification.qnli.QNLI_Process:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: mindnlp.dataset.text_classification.qqp.QQP_Process:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: mindnlp.dataset.text_classification.rte.RTE_Process:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: mindnlp.dataset.text_classification.stsb.STSB_Process:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.WNLI_Process:7
msgid "tokenizer you choose to tokenize the text dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: of mindnlp.dataset.text_classification.mnli.MNLI_Process:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: mindnlp.dataset.text_classification.mrpc.MRPC_Process:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: mindnlp.dataset.text_classification.qnli.QNLI_Process:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: mindnlp.dataset.text_classification.qqp.QQP_Process:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: mindnlp.dataset.text_classification.rte.RTE_Process:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: mindnlp.dataset.text_classification.stsb.STSB_Process:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.WNLI_Process:9
msgid "vocabulary object, used to store the mapping of token and index"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: of mindnlp.dataset.text_classification.mnli.MNLI_Process:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: mindnlp.dataset.text_classification.mrpc.MRPC_Process:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: mindnlp.dataset.text_classification.qnli.QNLI_Process:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: mindnlp.dataset.text_classification.qqp.QQP_Process:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: mindnlp.dataset.text_classification.rte.RTE_Process:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: mindnlp.dataset.text_classification.stsb.STSB_Process:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.WNLI_Process:12
msgid ""
"- **dataset** (MapDataset) - dataset after transforms - **Vocab** (Vocab) - "
"vocab created from dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: of mindnlp.dataset.text_classification.mnli.MNLI_Process:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: mindnlp.dataset.text_classification.mrpc.MRPC_Process:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: mindnlp.dataset.text_classification.qnli.QNLI_Process:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: mindnlp.dataset.text_classification.qqp.QQP_Process:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: mindnlp.dataset.text_classification.rte.RTE_Process:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: mindnlp.dataset.text_classification.stsb.STSB_Process:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.WNLI_Process:14
msgid "**dataset** (MapDataset) - dataset after transforms"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: of mindnlp.dataset.text_classification.mnli.MNLI_Process:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: mindnlp.dataset.text_classification.mrpc.MRPC_Process:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: mindnlp.dataset.text_classification.qnli.QNLI_Process:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: mindnlp.dataset.text_classification.qqp.QQP_Process:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: mindnlp.dataset.text_classification.rte.RTE_Process:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: mindnlp.dataset.text_classification.stsb.STSB_Process:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.WNLI_Process:17
msgid "If `column` is not a string or Tuple[str]"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mnli.py:docstring
#: of mindnlp.dataset.text_classification.mnli.Mnli:1
msgid "MNLI dataset source"
msgstr "MNLI数据源"

#: ../../api/dataset/text_classification.rst:62
msgid "mrpc"
msgstr "mrpc"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: of mindnlp.dataset.text_classification.mrpc:1
msgid "MRPC load function"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: of mindnlp.dataset.text_classification.mrpc.MRPC:1
msgid "Load the MRPC dataset"
msgstr "加载MRPC数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: of mindnlp.dataset.text_classification.mrpc.MRPC_Process:1
msgid "the process of the MRPC dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: of mindnlp.dataset.text_classification.mrpc.MRPC_Process:3
msgid "MRPC dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: of mindnlp.dataset.text_classification.mrpc.MRPC_Process:5
msgid "the column or columns needed to be transpormed of the MRPC dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/mrpc.py:docstring
#: of mindnlp.dataset.text_classification.mrpc.Mrpc:1
msgid "MRPC dataset source"
msgstr "MRPC数据源"

#: ../../api/dataset/text_classification.rst:70
msgid "qnli"
msgstr "qnli"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: of mindnlp.dataset.text_classification.qnli:1
msgid "QNLI dataset"
msgstr "QNLI数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: of mindnlp.dataset.text_classification.qnli.QNLI:1
msgid "Load the QNLI dataset"
msgstr "加载QNLI数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: of mindnlp.dataset.text_classification.qnli.QNLI_Process:1
msgid "the process of the QNLI dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: of mindnlp.dataset.text_classification.qnli.QNLI_Process:3
msgid "QNLI dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: of mindnlp.dataset.text_classification.qnli.QNLI_Process:5
msgid "the column or columns needed to be transpormed of the QNLI dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qnli.py:docstring
#: of mindnlp.dataset.text_classification.qnli.Qnli:1
msgid "QNLI dataset source"
msgstr "QNLI数据源"

#: ../../api/dataset/text_classification.rst:78
msgid "qqp"
msgstr "qqp"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: of mindnlp.dataset.text_classification.qqp:1
msgid "QQP load function"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: of mindnlp.dataset.text_classification.qqp.QQP:1
msgid "Load the QQP dataset"
msgstr "加载QQP数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: of mindnlp.dataset.text_classification.qqp.QQP_Process:1
msgid "the process of the QQP dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: of mindnlp.dataset.text_classification.qqp.QQP_Process:3
msgid "QQP dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: of mindnlp.dataset.text_classification.qqp.QQP_Process:5
msgid "the column or columns needed to be transpormed of the QQP dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/qqp.py:docstring
#: of mindnlp.dataset.text_classification.qqp.Qqp:1
msgid "QQP dataset source"
msgstr "QQP数据源"

#: ../../api/dataset/text_classification.rst:86
msgid "rte"
msgstr "rte"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: of mindnlp.dataset.text_classification.rte:1
#: mindnlp.dataset.text_classification.rte.RTE_Process:3
msgid "RTE dataset"
msgstr "RTE数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: of mindnlp.dataset.text_classification.rte.RTE:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: mindnlp.dataset.text_classification.wnli.WNLI:1
msgid "Load the WNLI dataset"
msgstr "加载WNLI数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: of mindnlp.dataset.text_classification.rte.RTE_Process:1
msgid "the process of the RTE dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: of mindnlp.dataset.text_classification.rte.RTE_Process:5
msgid "the column or columns needed to be transpormed of the RTE dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/rte.py:docstring
#: of mindnlp.dataset.text_classification.rte.Rte:1
msgid "RTE dataset source"
msgstr "RTE数据源"

#: ../../api/dataset/text_classification.rst:94
msgid "sogounews"
msgstr "sogounews"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sogounews.py:docstring
#: of mindnlp.dataset.text_classification.sogounews:1
msgid "SogouNews dataset"
msgstr "SogouNews数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sogounews.py:docstring
#: of mindnlp.dataset.text_classification.sogounews.SogouNews:1
msgid "Load the SogouNews dataset"
msgstr "加载SogouNews数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sogounews.py:docstring
#: of mindnlp.dataset.text_classification.sogounews.Sogounews:1
msgid "SogouNews dataset source"
msgstr "SogouNews数据源"

#: ../../api/dataset/text_classification.rst:102
msgid "sst2"
msgstr "sst2"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: of mindnlp.dataset.text_classification.sst2:1
msgid "SST2 dataset"
msgstr "SST2数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: of mindnlp.dataset.text_classification.sst2.SST2:1
msgid "Load the SST2 dataset"
msgstr "加载SST2数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: of mindnlp.dataset.text_classification.sst2.SST2_Process:1
msgid "the process of the SST2 dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: of mindnlp.dataset.text_classification.sst2.SST2_Process:3
msgid "SST2 dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: of mindnlp.dataset.text_classification.sst2.SST2_Process:5
msgid "the column needed to be transpormed of the sst2 dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/sst2.py:docstring
#: of mindnlp.dataset.text_classification.sst2.Sst2:1
msgid "SST2 dataset source"
msgstr "SST2数据源"

#: ../../api/dataset/text_classification.rst:110
msgid "stsb"
msgstr "stsb"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: of mindnlp.dataset.text_classification.stsb:1
msgid "STSB dataset"
msgstr "STSB数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: of mindnlp.dataset.text_classification.stsb.STSB:1
msgid "Load the STSB dataset"
msgstr "加载STSB数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: of mindnlp.dataset.text_classification.stsb.STSB_Process:1
msgid "the process of the STSB dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: of mindnlp.dataset.text_classification.stsb.STSB_Process:3
msgid "STSB dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: of mindnlp.dataset.text_classification.stsb.STSB_Process:5
msgid "the column or columns needed to be transpormed of the STSB dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/stsb.py:docstring
#: of mindnlp.dataset.text_classification.stsb.Stsb:1
msgid "STSB dataset source"
msgstr "STSB数据源"

#: ../../api/dataset/text_classification.rst:118
msgid "wnli"
msgstr "wnli"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: of mindnlp.dataset.text_classification.wnli:1
msgid "WNLI dataset"
msgstr "WNLI数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: of mindnlp.dataset.text_classification.wnli.WNLI_Process:1
msgid "the process of the WNLI dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: of mindnlp.dataset.text_classification.wnli.WNLI_Process:3
msgid "WNLI dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: of mindnlp.dataset.text_classification.wnli.WNLI_Process:5
msgid "the column or columns needed to be transpormed of the WNLI dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/wnli.py:docstring
#: of mindnlp.dataset.text_classification.wnli.Wnli:1
msgid "WNLI dataset source"
msgstr "WNLI数据源"

#: ../../api/dataset/text_classification.rst:126
msgid "yahooanswers"
msgstr "yahooanswers"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: of mindnlp.dataset.text_classification.yahooanswers:1
msgid "YahooAnswers dataset"
msgstr "YahooAnswers数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: of mindnlp.dataset.text_classification.yahooanswers.YahooAnswers:1
msgid "Load the YahooAnswers dataset"
msgstr "加载YahooAnswers数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: of mindnlp.dataset.text_classification.yahooanswers.YahooAnswers:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity:3
msgid "Directory where the datasets are saved. Default:'~/.mindnlp'"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: of mindnlp.dataset.text_classification.yahooanswers.YahooAnswers_Process:1
msgid "the process of the YahooAnswers dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: of mindnlp.dataset.text_classification.yahooanswers.YahooAnswers_Process:3
msgid "YahooAnswers dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: of mindnlp.dataset.text_classification.yahooanswers.YahooAnswers_Process:5
msgid "the column needed to be transpormed of the YahooAnswers dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yahooanswers.py:docstring
#: of mindnlp.dataset.text_classification.yahooanswers.Yahooanswers:1
msgid "YahooAnswers dataset source"
msgstr "YahooAnswers数据源"

#: ../../api/dataset/text_classification.rst:134
msgid "yelpreviewfull"
msgstr "yelpreviewfull"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: of mindnlp.dataset.text_classification.yelpreviewfull:1
msgid "YelpReviewFull dataset"
msgstr "YelpReviewFull数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: of mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull:1
msgid "Load the YelpReviewFull dataset"
msgstr "加载YelpReviewFull数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: of
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull_Process:1
msgid "the process of the YelpReviewFull dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: of
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull_Process:3
msgid "YelpReviewFull dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: of
#: mindnlp.dataset.text_classification.yelpreviewfull.YelpReviewFull_Process:5
msgid "the column needed to be transpormed of the YelpReviewFull dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewfull.py:docstring
#: of mindnlp.dataset.text_classification.yelpreviewfull.Yelpreviewfull:1
msgid "YelpReviewFull dataset source"
msgstr "YelpReviewFull数据源"

#: ../../api/dataset/text_classification.rst:142
msgid "yelpreviewpolarity"
msgstr "yelpreviewpolarity"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: of mindnlp.dataset.text_classification.yelpreviewpolarity:1
msgid "YelpReviewPolarity dataset"
msgstr "YelpReviewPolarity数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: of
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity:1
msgid "Load the YelpReviewPolarity dataset"
msgstr "加载YelpReviewPolarity数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: of
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity_Process:1
msgid "the process of the YelpReviewPolarity dataset"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: of
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity_Process:3
msgid "YelpReviewPolarity dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: of
#: mindnlp.dataset.text_classification.yelpreviewpolarity.YelpReviewPolarity_Process:5
msgid "the column needed to be transpormed of the YelpReviewPolarity dataset."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/yelpreviewpolarity.py:docstring
#: of
#: mindnlp.dataset.text_classification.yelpreviewpolarity.Yelpreviewpolarity:1
msgid "YelpReviewPolarity dataset source"
msgstr "YelpReviewPolarity数据源"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_classification/__init__.py:docstring
#: of mindnlp.dataset.text_classification:1
msgid "TextClassification dataset init"
msgstr ""

#: ../../api/dataset/text_generation.rst:2
msgid "Text Generation"
msgstr "文本生成"

#: ../../api/dataset/text_generation.rst:6
msgid "lcsts"
msgstr "lcsts"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/lcsts.py:docstring
#: of mindnlp.dataset.text_generation.lcsts:1
msgid "LCSTS load function"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/lcsts.py:docstring
#: of mindnlp.dataset.text_generation.lcsts.LCSTS:1
msgid "Load the LCSTS dataset"
msgstr "加载LCSTS数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/lcsts.py:docstring
#: of mindnlp.dataset.text_generation.lcsts.LCSTS:5
msgid "Split or splits to be returned. Default:('train', 'dev')."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/lcsts.py:docstring
#: of mindnlp.dataset.text_generation.lcsts.Lcsts:1
msgid "LCSTS dataset source"
msgstr "LCSTS数据源"

#: ../../api/dataset/text_generation.rst:14
msgid "penntreebank"
msgstr "penntreebank"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/penntreebank.py:docstring
#: of mindnlp.dataset.text_generation.penntreebank:1
msgid "PennTreebank load function"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/penntreebank.py:docstring
#: of mindnlp.dataset.text_generation.penntreebank.PennTreebank:1
msgid "Load the PennTreebank dataset"
msgstr "加载PennTreebank数据集"

#: ../../api/dataset/text_generation.rst:22
msgid "wikitext103"
msgstr "wikitext103"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext103.py:docstring
#: of mindnlp.dataset.text_generation.wikitext103:1
msgid "WikiText103 load function"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext103.py:docstring
#: of mindnlp.dataset.text_generation.wikitext103.WikiText103:1
msgid "Load the WikiText103 dataset"
msgstr ""

#: ../../api/dataset/text_generation.rst:30
msgid "wikitext2"
msgstr "wikitext2"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext2.py:docstring
#: of mindnlp.dataset.text_generation.wikitext2:1
msgid "WikiText2 load function"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/wikitext2.py:docstring
#: of mindnlp.dataset.text_generation.wikitext2.WikiText2:1
msgid "Load the WikiText2 dataset"
msgstr "加载WikiText2数据集"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/text_generation/__init__.py:docstring
#: of mindnlp.dataset.text_generation:1
msgid "TextGeneration dataset init"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/dataset/transforms/__init__.py:docstring
#: of mindnlp.dataset.transforms:1 ../../api/dataset/transforms.rst:2
msgid "Transforms"
msgstr ""

#: ../../api/engine.rst:2
msgid "Engine"
msgstr ""

#: ../../api/engine/callbacks.rst:2
msgid "Callbacks"
msgstr ""

#: ../../api/engine/callbacks.rst:6
msgid "best\\_model\\_callback"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/best_model_callback.py:docstring
#: of mindnlp.engine.callbacks.best_model_callback:1
msgid "Callback for saving and loading best model"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/best_model_callback.py:docstring
#: of mindnlp.engine.callbacks.best_model_callback.BestModelCallback:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: mindnlp.engine.callbacks.callback_manager.CallbackManager:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/checkpoint_callback.py:docstring
#: mindnlp.engine.callbacks.checkpoint_callback.CheckpointCallback:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/earlystop_callback.py:docstring
#: mindnlp.engine.callbacks.earlystop_callback.EarlyStopCallback:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: mindnlp.engine.callbacks.timer_callback.TimerCallback:1
msgid "Bases: :py:class:`~mindnlp.abc.callback.Callback`"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/best_model_callback.py:docstring
#: of mindnlp.engine.callbacks.best_model_callback.BestModelCallback:1
msgid ""
"Save the model with the best `metrics` value and reload the model at the end "
"of the training. The best model can only be loaded at the end of the "
"training."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/best_model_callback.py:docstring
#: of mindnlp.engine.callbacks.best_model_callback.BestModelCallback:4
msgid "Folder for saving."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/best_model_callback.py:docstring
#: of mindnlp.engine.callbacks.best_model_callback.BestModelCallback:6
msgid "Whether the larger `metrics`, the better `metrics`. Default: True."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/best_model_callback.py:docstring
#: of mindnlp.engine.callbacks.best_model_callback.BestModelCallback:8
msgid "Whether load the best model at the end of the training."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/best_model_callback.py:docstring
#: of mindnlp.engine.callbacks.best_model_callback.BestModelCallback:10
msgid "Whether save the model on exception."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/best_model_callback.py:docstring
#: of
#: mindnlp.engine.callbacks.best_model_callback.BestModelCallback.evaluate_end:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/earlystop_callback.py:docstring
#: mindnlp.engine.callbacks.earlystop_callback.EarlyStopCallback.evaluate_end:1
msgid "Called after evaluating."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/best_model_callback.py:docstring
#: of
#: mindnlp.engine.callbacks.best_model_callback.BestModelCallback.evaluate_end:3
#: mindnlp.engine.callbacks.best_model_callback.BestModelCallback.train_end:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/checkpoint_callback.py:docstring
#: mindnlp.engine.callbacks.checkpoint_callback.CheckpointCallback.train_begin:3
#: mindnlp.engine.callbacks.checkpoint_callback.CheckpointCallback.train_epoch_end:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/earlystop_callback.py:docstring
#: mindnlp.engine.callbacks.earlystop_callback.EarlyStopCallback.evaluate_end:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.evaluate_begin:3
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.evaluate_end:3
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.format_timer:3
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_begin:3
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_end:3
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_epoch_begin:3
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_epoch_end:3
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_step_begin:3
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_step_end:3
msgid "Information about the model."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/best_model_callback.py:docstring
#: of
#: mindnlp.engine.callbacks.best_model_callback.BestModelCallback.is_better_metric_value:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/earlystop_callback.py:docstring
#: mindnlp.engine.callbacks.earlystop_callback.EarlyStopCallback.is_better_metric_value:1
msgid "Compare each metrics values with the best metrics values."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/best_model_callback.py:docstring
#: of
#: mindnlp.engine.callbacks.best_model_callback.BestModelCallback.is_better_metric_value:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/earlystop_callback.py:docstring
#: mindnlp.engine.callbacks.earlystop_callback.EarlyStopCallback.is_better_metric_value:3
msgid "metrics values used to compared with the best metrics values so far."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/best_model_callback.py:docstring
#: of
#: mindnlp.engine.callbacks.best_model_callback.BestModelCallback.train_end:1
msgid "Called once after network training and load the best model params."
msgstr ""

#: ../../api/engine/callbacks.rst:14
msgid "callback\\_manager"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager:1
#: mindnlp.engine.callbacks.callback_manager.CallbackManager:1
msgid "Callback Manager."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager.CallbackManager:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/evaluator.py:docstring
#: mindnlp.engine.evaluator.Evaluator:13
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/trainer.py:docstring
#: mindnlp.engine.trainer.Trainer:31
msgid ""
"List of callback objects which should be executed while training. Default: "
"None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
msgid "Called before each forward beginning."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
msgid "Called after each backward finished."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
msgid "Called before each data_sink beginning."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
msgid "Called after each data_sink finished."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
msgid "Called before evaluating."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
msgid "Called if having exceptions."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
msgid "Called before fetch each batch/ds_sink_size data."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
msgid "Called after fetch each batch/ds_sink_size data."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
msgid "Called after each step finished."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
msgid "Called before loading model."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
msgid "Called before saving model."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
msgid "Called once before network training."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_end:1
msgid "Called once after network training."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_epoch_begin:1
msgid "Called before each train epoch beginning."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_epoch_end:1
msgid "Called after each train epoch finished."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_step_begin:1
msgid "Called before each train step beginning."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager._transfer.<locals>.wrapper:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: mindnlp.engine.callbacks.timer_callback.TimerCallback.train_step_end:1
msgid "Called after each train step finished."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager.RunContext:1
msgid ""
"Provide information about the model. This class needs to be used with :class:"
"`mindspore.train.callback.Callback`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/callback_manager.py:docstring
#: of mindnlp.engine.callbacks.callback_manager.RunContext:4
msgid "Holding the related information of model."
msgstr ""

#: ../../api/engine/callbacks.rst:22
msgid "checkpoint\\_callback"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/checkpoint_callback.py:docstring
#: of mindnlp.engine.callbacks.checkpoint_callback:1
msgid "Callback for saving checkpoint."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/checkpoint_callback.py:docstring
#: of mindnlp.engine.callbacks.checkpoint_callback.CheckpointCallback:1
msgid ""
"Save checkpoint of the model. save the current Trainer state at the end of "
"each epoch, which can be used to resume previous operations. Continue "
"training a sample code using the most recent epoch"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/checkpoint_callback.py:docstring
#: of mindnlp.engine.callbacks.checkpoint_callback.CheckpointCallback:5
msgid ""
"The path to save the state. A specific path needs to be specified, such as "
"'checkpoints/chtp.pt'. Default: None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/checkpoint_callback.py:docstring
#: of mindnlp.engine.callbacks.checkpoint_callback.CheckpointCallback:8
msgid "Save a checkpoint file every n epochs."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/checkpoint_callback.py:docstring
#: of mindnlp.engine.callbacks.checkpoint_callback.CheckpointCallback:10
msgid "Save checkpoint files at most. Default:5."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/checkpoint_callback.py:docstring
#: of
#: mindnlp.engine.callbacks.checkpoint_callback.CheckpointCallback.train_begin:1
msgid "Notice the file saved path of checkpoints at the beginning of training."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/checkpoint_callback.py:docstring
#: of
#: mindnlp.engine.callbacks.checkpoint_callback.CheckpointCallback.train_epoch_end:1
msgid "Save checkpoint every n epochs at the end of the epoch."
msgstr ""

#: ../../api/engine/callbacks.rst:30
msgid "earlystop\\_callback"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/earlystop_callback.py:docstring
#: of mindnlp.engine.callbacks.earlystop_callback:1
msgid "Callback for Early Stop."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/earlystop_callback.py:docstring
#: of mindnlp.engine.callbacks.earlystop_callback.EarlyStopCallback:1
msgid "Stop training without getting better after n epochs."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/earlystop_callback.py:docstring
#: of mindnlp.engine.callbacks.earlystop_callback.EarlyStopCallback:3
msgid "Numbers of epochs evaluations without raising. Default:10."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/earlystop_callback.py:docstring
#: of mindnlp.engine.callbacks.earlystop_callback.EarlyStopCallback:5
msgid "Whether the larger value of the metric is better. Default:True."
msgstr ""

#: ../../api/engine/callbacks.rst:38
msgid "timer\\_callback"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: of mindnlp.engine.callbacks.timer_callback:1
msgid "Callback for timing."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: of mindnlp.engine.callbacks.timer_callback.TimerCallback:1
msgid ""
"Print relevant event information during the training process, such as "
"training duration, evaluation duration, total duration."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: of mindnlp.engine.callbacks.timer_callback.TimerCallback:4
msgid ""
"When to print time information.Default:-1.  - -1: print once at the end of "
"each epoch. - positive number n: print once n steps."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: of mindnlp.engine.callbacks.timer_callback.TimerCallback:4
msgid "When to print time information.Default:-1."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: of mindnlp.engine.callbacks.timer_callback.TimerCallback:6
msgid "-1: print once at the end of each epoch."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: of mindnlp.engine.callbacks.timer_callback.TimerCallback:7
msgid "positive number n: print once n steps."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: of mindnlp.engine.callbacks.timer_callback.TimerCallback:9
msgid "Number of decimal places to keep. Default:3"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: of mindnlp.engine.callbacks.timer_callback.TimerCallback.evaluate_begin:1
msgid "Called once before the network evaluating."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: of mindnlp.engine.callbacks.timer_callback.TimerCallback.evaluate_end:1
msgid "Called once after the network evaluating."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: of mindnlp.engine.callbacks.timer_callback.TimerCallback.format_timer:1
msgid "Format the output."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: of mindnlp.engine.callbacks.timer_callback.TimerCallback.train_begin:1
msgid "Called once before the network training."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/timer_callback.py:docstring
#: of mindnlp.engine.callbacks.timer_callback.Timers:1
msgid "Group of timers."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/callbacks/__init__.py:docstring
#: of mindnlp.engine.callbacks:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/__init__.py:docstring
#: mindnlp.engine.metrics:1
msgid "Callbacks."
msgstr ""

#: ../../api/engine/evaluator.rst:2
msgid "Evaluator"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/evaluator.py:docstring
#: of mindnlp.engine.evaluator:1
msgid "Evaluator for testing."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/evaluator.py:docstring
#: of mindnlp.engine.evaluator.Evaluator:1
msgid "Evaluator to test the model."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/evaluator.py:docstring
#: of mindnlp.engine.evaluator.Evaluator:4
msgid "A network for evaluating."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/evaluator.py:docstring
#: of mindnlp.engine.evaluator.Evaluator:6
msgid "A evaluating dataset iterator."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/evaluator.py:docstring
#: of mindnlp.engine.evaluator.Evaluator:8
msgid "numbers of samples in each batch."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/evaluator.py:docstring
#: of mindnlp.engine.evaluator.Evaluator:10
msgid ""
"List of metric objects which should be used while evaluating. Default:None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/evaluator.py:docstring
#: of mindnlp.engine.evaluator.Evaluator.clear_metrics:1
msgid "Clear metrics values."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/evaluator.py:docstring
#: of mindnlp.engine.evaluator.Evaluator.run:1
msgid "Evaluating function entry."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/evaluator.py:docstring
#: of mindnlp.engine.evaluator.Evaluator.run:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/trainer.py:docstring
#: mindnlp.engine.trainer.Trainer.run:3
msgid "Target label column names for loss function."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/evaluator.py:docstring
#: of mindnlp.engine.evaluator.Evaluator.run:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/trainer.py:docstring
#: mindnlp.engine.trainer.Trainer.run:5
msgid "Whether use Just-In-Time compile."
msgstr ""

#: ../../api/engine/metrics.rst:2
msgid "Metrics"
msgstr ""

#: ../../api/engine/metrics.rst:6
msgid "accuracy"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: of mindnlp.engine.metrics.accuracy:1
msgid "\"Class for Metric Accuracy"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: of mindnlp.engine.metrics.accuracy.Accuracy:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: mindnlp.engine.metrics.distinct.Distinct:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: mindnlp.engine.metrics.em_score.EmScore:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: mindnlp.engine.metrics.f1.F1Score:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: mindnlp.engine.metrics.pearson.PearsonCorrelation:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: mindnlp.engine.metrics.precision.Precision:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeL:1 mindnlp.engine.metrics.rouge.RougeN:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation:1
msgid "Bases: :py:class:`~mindnlp.abc.metric.Metric`"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: of mindnlp.engine.metrics.accuracy.Accuracy:1
msgid "Calculates accuracy. The function is shown as follows:"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: of mindnlp.engine.metrics.accuracy.Accuracy:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore:22
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: mindnlp.engine.metrics.distinct.Distinct:8
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: mindnlp.engine.metrics.em_score.EmScore:4
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: mindnlp.engine.metrics.f1.F1Score:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: mindnlp.engine.metrics.pearson.PearsonCorrelation:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: mindnlp.engine.metrics.precision.Precision:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall:10
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeL:19 mindnlp.engine.metrics.rouge.RougeN:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation:8
msgid "Name of the metric."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: of mindnlp.engine.metrics.accuracy.Accuracy.clear:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore.clear:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix.clear:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: mindnlp.engine.metrics.distinct.Distinct.clear:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: mindnlp.engine.metrics.em_score.EmScore.clear:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: mindnlp.engine.metrics.f1.F1Score.clear:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation.clear:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: mindnlp.engine.metrics.pearson.PearsonCorrelation.clear:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity.clear:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: mindnlp.engine.metrics.precision.Precision.clear:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall.clear:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeL.clear:1
#: mindnlp.engine.metrics.rouge.RougeN.clear:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation.clear:1
msgid "Clears the internal evaluation results."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: of mindnlp.engine.metrics.accuracy.Accuracy.eval:1
msgid "Computes and returns the accuracy."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: of mindnlp.engine.metrics.accuracy.Accuracy.get_metric_name:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore.get_metric_name:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix.get_metric_name:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: mindnlp.engine.metrics.distinct.Distinct.get_metric_name:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: mindnlp.engine.metrics.em_score.EmScore.get_metric_name:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: mindnlp.engine.metrics.f1.F1Score.get_metric_name:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation.get_metric_name:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: mindnlp.engine.metrics.pearson.PearsonCorrelation.get_metric_name:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: mindnlp.engine.metrics.precision.Precision.get_metric_name:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall.get_metric_name:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeL.get_metric_name:1
#: mindnlp.engine.metrics.rouge.RougeN.get_metric_name:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation.get_metric_name:1
msgid "Returns the name of the metric."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: of mindnlp.engine.metrics.accuracy.Accuracy.update:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: mindnlp.engine.metrics.bleu.BleuScore.update:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix.update:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: mindnlp.engine.metrics.distinct.Distinct.update:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: mindnlp.engine.metrics.em_score.EmScore.update:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: mindnlp.engine.metrics.f1.F1Score.update:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation.update:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: mindnlp.engine.metrics.pearson.PearsonCorrelation.update:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity.update:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall.update:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeL.update:1
#: mindnlp.engine.metrics.rouge.RougeN.update:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation.update:1
msgid "Updates local variables."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: of mindnlp.engine.metrics.accuracy.Accuracy.update:3
msgid ""
"Input `preds` and `labels`.  - preds (Union[Tensor, list, numpy.ndarray]): "
"Predicted value. `preds` is a list   of floating numbers in range :math:`[0, "
"1]` and the shape of `preds` is   :math:`(N, C)` in most cases (not "
"strictly), where :math:`N` is the number   of cases and :math:`C` is the "
"number of categories. - labels (Union[Tensor, list, numpy.ndarray]): Ground "
"truth value. `labels` must   be in one-hot format that shape is :math:`(N, "
"C)`, or can be transformed to   one-hot format that shape is :math:`(N,)`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: of mindnlp.engine.metrics.accuracy.Accuracy.update:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix.update:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: mindnlp.engine.metrics.f1.F1Score.update:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation.update:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: mindnlp.engine.metrics.pearson.PearsonCorrelation.update:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity.update:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: mindnlp.engine.metrics.precision.Precision.update:4
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall.update:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation.update:3
msgid "Input `preds` and `labels`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: of mindnlp.engine.metrics.accuracy.Accuracy.update:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation.update:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: mindnlp.engine.metrics.precision.Precision.update:6
msgid ""
"preds (Union[Tensor, list, numpy.ndarray]): Predicted value. `preds` is a "
"list of floating numbers in range :math:`[0, 1]` and the shape of `preds` "
"is :math:`(N, C)` in most cases (not strictly), where :math:`N` is the "
"number of cases and :math:`C` is the number of categories."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: of mindnlp.engine.metrics.accuracy.Accuracy.update:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation.update:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: mindnlp.engine.metrics.precision.Precision.update:10
msgid ""
"labels (Union[Tensor, list, numpy.ndarray]): Ground truth value. `labels` "
"must be in one-hot format that shape is :math:`(N, C)`, or can be "
"transformed to one-hot format that shape is :math:`(N,)`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: of mindnlp.engine.metrics.accuracy.Accuracy.update:13
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity.update:13
msgid "If the number of `inputs` is not 2."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/accuracy.py:docstring
#: of mindnlp.engine.metrics.accuracy.Accuracy.update:14
msgid ""
"class numbers of last input predicted data and current predicted data     "
"not match."
msgstr ""

#: ../../api/engine/metrics.rst:14
msgid "bleu"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: of mindnlp.engine.metrics.bleu:1
msgid "\"Class for Metric BleuScore"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: of mindnlp.engine.metrics.bleu.BleuScore.eval:1
msgid "Computes and returns the BLEU score."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: of mindnlp.engine.metrics.bleu.BleuScore.update:3
msgid ""
"Input `cand` and `ref_list`.  - cand (list): A list of tokenized candidate "
"sentences. - ref_list (list): A list of lists of tokenized ground truth "
"sentences."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: of mindnlp.engine.metrics.bleu.BleuScore.update:3
msgid "Input `cand` and `ref_list`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: of mindnlp.engine.metrics.bleu.BleuScore.update:5
msgid "cand (list): A list of tokenized candidate sentences."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: of mindnlp.engine.metrics.bleu.BleuScore.update:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeN.update:6
msgid "ref_list (list): A list of lists of tokenized ground truth sentences."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/bleu.py:docstring
#: of mindnlp.engine.metrics.bleu.BleuScore.update:8
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix.update:10
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: mindnlp.engine.metrics.em_score.EmScore.update:8
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: mindnlp.engine.metrics.f1.F1Score.update:13
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: mindnlp.engine.metrics.matthews.MatthewsCorrelation.update:13
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: mindnlp.engine.metrics.pearson.PearsonCorrelation.update:10
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: mindnlp.engine.metrics.precision.Precision.update:14
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall.update:13
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeL.update:7
#: mindnlp.engine.metrics.rouge.RougeN.update:8
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation.update:10
msgid "If the number of inputs is not 2."
msgstr ""

#: ../../api/engine/metrics.rst:22
msgid "confusion\\_matrix"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: of mindnlp.engine.metrics.confusion_matrix:1
msgid "\"Class for Metric ConfusionMatrix"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: of mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix.eval:1
msgid "Computes and returns the Confusion Matrix."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: of mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix.update:3
msgid ""
"Input `preds` and `labels`.  - preds (Union[Tensor, list, np.ndarray]): "
"Predicted value. `preds` is a list of   floating numbers and the shape of "
"`preds` is :math:`(N, C)` or :math:`(N,)`. - labels (Union[Tensor, list, np."
"ndarray]): Ground truth. The shape of `labels` is   :math:`(N,)`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: of mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix.update:5
msgid ""
"preds (Union[Tensor, list, np.ndarray]): Predicted value. `preds` is a list "
"of floating numbers and the shape of `preds` is :math:`(N, C)` or :math:"
"`(N,)`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/confusion_matrix.py:docstring
#: of mindnlp.engine.metrics.confusion_matrix.ConfusionMatrix.update:7
msgid ""
"labels (Union[Tensor, list, np.ndarray]): Ground truth. The shape of "
"`labels` is :math:`(N,)`."
msgstr ""

#: ../../api/engine/metrics.rst:30
msgid "distinct"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: of mindnlp.engine.metrics.distinct:1
msgid "\"Class for Metric Distinct"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: of mindnlp.engine.metrics.distinct.Distinct.eval:1
msgid "Computes and returns the Distinct-N."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: of mindnlp.engine.metrics.distinct.Distinct.update:3
msgid ""
"Input `cand_list`.  - cand_list (list): A list of tokenized candidate "
"sentence."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: of mindnlp.engine.metrics.distinct.Distinct.update:3
msgid "Input `cand_list`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: of mindnlp.engine.metrics.distinct.Distinct.update:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: mindnlp.engine.metrics.rouge.RougeN.update:5
msgid "cand_list (list): A list of tokenized candidate sentence."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/distinct.py:docstring
#: of mindnlp.engine.metrics.distinct.Distinct.update:7
msgid "If the number of inputs is not 1."
msgstr ""

#: ../../api/engine/metrics.rst:38
msgid "em\\_score"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: of mindnlp.engine.metrics.em_score:1
msgid "\"Class for Metric EmScore"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: of mindnlp.engine.metrics.em_score.EmScore:1
msgid ""
"Calculates the exact match (EM) score. This metric measures the percentage "
"of predictions that match any one of the ground truth answers exactly."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: of mindnlp.engine.metrics.em_score.EmScore.eval:1
msgid "Computes and returns the EM score."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: of mindnlp.engine.metrics.em_score.EmScore.eval:3
msgid "Returns: - **exact_match** (float) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: of mindnlp.engine.metrics.em_score.EmScore.update:3
msgid ""
"Input `preds` and `examples`.  - preds (Union[str, list]): Predicted value. "
"- examples (list): Ground truth."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: of mindnlp.engine.metrics.em_score.EmScore.update:3
msgid "Input `preds` and `examples`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: of mindnlp.engine.metrics.em_score.EmScore.update:5
msgid "preds (Union[str, list]): Predicted value."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/em_score.py:docstring
#: of mindnlp.engine.metrics.em_score.EmScore.update:6
msgid "examples (list): Ground truth."
msgstr ""

#: ../../api/engine/metrics.rst:46
msgid "f1"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: of mindnlp.engine.metrics.f1:1
msgid "\"Class for Metric F1Score"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: of mindnlp.engine.metrics.f1.F1Score.eval:1
msgid "Computes and returns the F1 score."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: of mindnlp.engine.metrics.f1.F1Score.eval:3
msgid "- **f1_s** (numpy.ndarray) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: of mindnlp.engine.metrics.f1.F1Score.eval:5
msgid "**f1_s** (numpy.ndarray) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: of mindnlp.engine.metrics.f1.F1Score.update:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall.update:3
msgid ""
"Input `preds` and `labels`.  - preds (Union[Tensor, list, np.ndarray]): "
"Predicted value. `preds` is a list of   floating numbers in range :math:`[0, "
"1]` and the shape of `preds` is   :math:`(N, C)` in most cases (not "
"strictly), where :math:`N` is the number   of cases and :math:`C` is the "
"number of categories. - labels (Union[Tensor, list, np.ndarray]): Ground "
"truth. `labels` must be in   one-hot format that shape is :math:`(N, C)`, or "
"can be transformed to   one-hot format that shape is :math:`(N,)`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: of mindnlp.engine.metrics.f1.F1Score.update:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity.update:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall.update:5
msgid ""
"preds (Union[Tensor, list, np.ndarray]): Predicted value. `preds` is a list "
"of floating numbers in range :math:`[0, 1]` and the shape of `preds` is :"
"math:`(N, C)` in most cases (not strictly), where :math:`N` is the number of "
"cases and :math:`C` is the number of categories."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: of mindnlp.engine.metrics.f1.F1Score.update:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: mindnlp.engine.metrics.perplexity.Perplexity.update:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: mindnlp.engine.metrics.recall.Recall.update:9
msgid ""
"labels (Union[Tensor, list, np.ndarray]): Ground truth. `labels` must be in "
"one-hot format that shape is :math:`(N, C)`, or can be transformed to one-"
"hot format that shape is :math:`(N,)`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/f1.py:docstring
#: of mindnlp.engine.metrics.f1.F1Score.update:14
msgid ""
"class numbers of last input predicted data and current     predicted data "
"not match."
msgstr ""

#: ../../api/engine/metrics.rst:54
msgid "matthews"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: of mindnlp.engine.metrics.matthews:1
msgid "\"Class for Metric MatthewsCorrelation"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: of mindnlp.engine.metrics.matthews.MatthewsCorrelation.eval:1
msgid "Computes and returns the MCC."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/matthews.py:docstring
#: of mindnlp.engine.metrics.matthews.MatthewsCorrelation.update:3
msgid ""
"Input `preds` and `labels`.  - preds (Union[Tensor, list, numpy.ndarray]): "
"Predicted value. `preds` is a list of   floating numbers in range :math:`[0, "
"1]` and the shape of `preds` is   :math:`(N, C)` in most cases (not "
"strictly), where :math:`N` is the number of   cases and :math:`C` is the "
"number of categories. - labels (Union[Tensor, list, numpy.ndarray]): Ground "
"truth value. `labels` must be in   one-hot format that shape is :math:`(N, "
"C)`, or can be transformed to one-hot   format that shape is :math:`(N,)`."
msgstr ""

#: ../../api/engine/metrics.rst:62
msgid "pearson"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: of mindnlp.engine.metrics.pearson:1
msgid "\"Class for Metric PearsonCorrelation"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: of mindnlp.engine.metrics.pearson.PearsonCorrelation.eval:1
msgid "Computes and returns the PCC."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: of mindnlp.engine.metrics.pearson.PearsonCorrelation.update:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation.update:3
msgid ""
"Input `preds` and `labels`.  - preds (Union[Tensor, list, np.ndarray]): "
"Predicted value. `preds` is a list of   floating numbers and the shape of "
"`preds` is :math:`(N, 1)`. - labels (Union[Tensor, list, np.ndarray]): "
"Ground truth. `labels` is a list of   floating numbers and the shape of "
"`preds` is :math:`(N, 1)`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: of mindnlp.engine.metrics.pearson.PearsonCorrelation.update:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation.update:5
msgid ""
"preds (Union[Tensor, list, np.ndarray]): Predicted value. `preds` is a list "
"of floating numbers and the shape of `preds` is :math:`(N, 1)`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/pearson.py:docstring
#: of mindnlp.engine.metrics.pearson.PearsonCorrelation.update:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: mindnlp.engine.metrics.spearman.SpearmanCorrelation.update:7
msgid ""
"labels (Union[Tensor, list, np.ndarray]): Ground truth. `labels` is a list "
"of floating numbers and the shape of `preds` is :math:`(N, 1)`."
msgstr ""

#: ../../api/engine/metrics.rst:70
msgid "perplexity"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: of mindnlp.engine.metrics.perplexity:1
msgid "\"Class for Metric Perplexity"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: of mindnlp.engine.metrics.perplexity.Perplexity:9
msgid "Where :math:`w` represents words in corpus."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: of mindnlp.engine.metrics.perplexity.Perplexity.eval:1
msgid "Computes and returns the perplexity."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: of mindnlp.engine.metrics.perplexity.Perplexity.get_metric_name:1
msgid "Return the name of the metric."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/perplexity.py:docstring
#: of mindnlp.engine.metrics.perplexity.Perplexity.update:3
msgid ""
"Input `preds` and `labels`.  - preds (Union[Tensor, list, np.ndarray]): "
"Predicted value. `preds` is a list   of floating numbers in range :math:`[0, "
"1]` and the shape of `preds` is   :math:`(N, C)` in most cases (not "
"strictly), where :math:`N` is the   number of cases and :math:`C` is the "
"number of categories. - labels (Union[Tensor, list, np.ndarray]): Ground "
"truth. `labels` must be in   one-hot format that shape is :math:`(N, C)`, or "
"can be transformed to   one-hot format that shape is :math:`(N,)`."
msgstr ""

#: ../../api/engine/metrics.rst:78
msgid "precision"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: of mindnlp.engine.metrics.precision:1
msgid "\"Class for Metric Precision"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: of mindnlp.engine.metrics.precision.Precision:1
msgid ""
"Calculates precision. Precision (also known as positive predictive value) is "
"the actual positive proportion in the predicted positive sample. It can only "
"be used to evaluate the precision score of binary tasks. The function is "
"shown as follows:"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: of mindnlp.engine.metrics.precision.Precision.eval:1
msgid "Computes and returns the precision."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: of mindnlp.engine.metrics.precision.Precision.eval:3
msgid "- **prec** (numpy.ndarray) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: of mindnlp.engine.metrics.precision.Precision.eval:5
msgid "**prec** (numpy.ndarray) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: of mindnlp.engine.metrics.precision.Precision.update:1
msgid ""
"Updates local variables. If the index of the maximum of the predicted value "
"matches the label, the predicted result is correct."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/precision.py:docstring
#: of mindnlp.engine.metrics.precision.Precision.update:4
msgid ""
"Input `preds` and `labels`.  - preds (Union[Tensor, list, numpy.ndarray]): "
"Predicted value. `preds` is a list   of floating numbers in range :math:`[0, "
"1]` and the shape of `preds` is   :math:`(N, C)` in most cases (not "
"strictly), where :math:`N` is   the number of cases and :math:`C` is the "
"number of categories. - labels (Union[Tensor, list, numpy.ndarray]): Ground "
"truth value. `labels` must   be in one-hot format that shape is :math:`(N, "
"C)`, or can be transformed   to one-hot format that shape is :math:`(N,)`."
msgstr ""

#: ../../api/engine/metrics.rst:86
msgid "recall"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: of mindnlp.engine.metrics.recall:1
msgid "\"Class for Metric Recall"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: of mindnlp.engine.metrics.recall.Recall.eval:1
msgid "Computes and returns the recall."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: of mindnlp.engine.metrics.recall.Recall.eval:3
msgid "- **rec** (numpy.ndarray) - The computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/recall.py:docstring
#: of mindnlp.engine.metrics.recall.Recall.eval:5
msgid "**rec** (numpy.ndarray) - The computed result."
msgstr ""

#: ../../api/engine/metrics.rst:94
msgid "rouge"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: of mindnlp.engine.metrics.rouge:1
msgid "\"Classes for Metrics RougeN and RougeL"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: of mindnlp.engine.metrics.rouge.RougeL.eval:1
msgid "Computes and returns the Rouge-L score."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: of mindnlp.engine.metrics.rouge.RougeL.update:3
msgid ""
"Input `cand_list` and `ref_list`. cand_list (list): A list of tokenized "
"candidate sentence. ref_list (list): A list of lists of tokenized ground "
"truth sentences."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: of mindnlp.engine.metrics.rouge.RougeN:1
msgid ""
"Calculates the ROUGE-N. ROUGE (Recall-Oriented Understudy for Gisting "
"Evaluation) is a set of metrics used for evaluating automatic summarization "
"and machine translation models. ROUGE-N refers to the overlap of n-grams "
"between candidates and reference summaries."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: of mindnlp.engine.metrics.rouge.RougeN.eval:1
msgid "Computes and returns the Rouge-N score."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: of mindnlp.engine.metrics.rouge.RougeN.update:3
msgid ""
"Input `cand_list` and `ref_list`.  - cand_list (list): A list of tokenized "
"candidate sentence. - ref_list (list): A list of lists of tokenized ground "
"truth sentences."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/rouge.py:docstring
#: of mindnlp.engine.metrics.rouge.RougeN.update:3
msgid "Input `cand_list` and `ref_list`."
msgstr ""

#: ../../api/engine/metrics.rst:102
msgid "spearman"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: of mindnlp.engine.metrics.spearman:1
msgid "\"Class for Metric Spearman"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/metrics/spearman.py:docstring
#: of mindnlp.engine.metrics.spearman.SpearmanCorrelation.eval:1
msgid "Computes and returns the SRCC."
msgstr ""

#: ../../api/engine/trainer.rst:2
msgid "Trainer"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/trainer.py:docstring
#: of mindnlp.engine.trainer:1
msgid "Trainer for training."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/trainer.py:docstring
#: of mindnlp.engine.trainer.Trainer:1
msgid "Trainer to train the model."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/trainer.py:docstring
#: of mindnlp.engine.trainer.Trainer:4
msgid "A training network."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/trainer.py:docstring
#: of mindnlp.engine.trainer.Trainer:6
msgid ""
"A training dataset iterator. If `loss_fn` is defined, the data and label "
"will be passed to the `network` and the `loss_fn` respectively, so a tuple "
"(data, label) should be returned from dataset. If there is multiple data or "
"labels, set `loss_fn` to None and implement calculation of loss in "
"`network`, then a tuple (data1, data2, data3, ...) with all data returned "
"from dataset will be passed to the `network`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/trainer.py:docstring
#: of mindnlp.engine.trainer.Trainer:13
msgid ""
"A evaluating dataset iterator. If `loss_fn` is defined, the data and label "
"will be passed to the `network` and the `loss_fn` respectively, so a tuple "
"(data, label) should be returned from dataset. If there is multiple data or "
"labels, set `loss_fn` to None and implement calculation of loss in "
"`network`, then a tuple (data1, data2, data3, ...) with all data returned "
"from dataset will be passed to the `network`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/trainer.py:docstring
#: of mindnlp.engine.trainer.Trainer:20
msgid ""
"List of metrics objects which should be used while evaluating. Default:None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/trainer.py:docstring
#: of mindnlp.engine.trainer.Trainer:23
msgid "Total number of iterations on the data. Default: 10."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/trainer.py:docstring
#: of mindnlp.engine.trainer.Trainer:25
msgid ""
"Optimizer for updating the weights. If `optimizer` is None, the `network` "
"needs to do backpropagation and update weights. Default value: None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/trainer.py:docstring
#: of mindnlp.engine.trainer.Trainer:28
msgid ""
"Objective function. If `loss_fn` is None, the `network` should contain the "
"calculation of loss and parallel if needed. Default: None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/engine/trainer.py:docstring
#: of mindnlp.engine.trainer.Trainer.run:1
msgid "Training process entry."
msgstr ""

#: ../../api/models.rst:2
msgid "models"
msgstr ""

#: ../../api/models.rst:6
msgid "bert"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert:1
msgid "MindNLP bert model"
msgstr "函数式融合编程的BERT模型实现，对标huggingface"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertAttention:1
msgid "Bert Attention"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertAttention.construct:1
#: mindnlp.models.bert.BertEmbeddings.construct:1
#: mindnlp.models.bert.BertEncoder.construct:1
#: mindnlp.models.bert.BertForPretraining.construct:1
#: mindnlp.models.bert.BertIntermediate.construct:1
#: mindnlp.models.bert.BertLMPredictionHead.construct:1
#: mindnlp.models.bert.BertLayer.construct:1
#: mindnlp.models.bert.BertModel.construct:1
#: mindnlp.models.bert.BertOutput.construct:1
#: mindnlp.models.bert.BertPooler.construct:1
#: mindnlp.models.bert.BertPreTrainingHeads.construct:1
#: mindnlp.models.bert.BertPredictionHeadTransform.construct:1
#: mindnlp.models.bert.BertSelfAttention.construct:1
#: mindnlp.models.bert.BertSelfOutput.construct:1
#: mindnlp.models.bert.Matmul.construct:1
msgid ""
"Defines the computation to be performed. This method must be overridden by "
"all subclasses."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertAttention.construct:3
#: mindnlp.models.bert.BertEmbeddings.construct:3
#: mindnlp.models.bert.BertEncoder.construct:3
#: mindnlp.models.bert.BertForPretraining.construct:3
#: mindnlp.models.bert.BertIntermediate.construct:3
#: mindnlp.models.bert.BertLMPredictionHead.construct:3
#: mindnlp.models.bert.BertLayer.construct:3
#: mindnlp.models.bert.BertModel.construct:3
#: mindnlp.models.bert.BertOutput.construct:3
#: mindnlp.models.bert.BertPooler.construct:3
#: mindnlp.models.bert.BertPreTrainingHeads.construct:3
#: mindnlp.models.bert.BertPredictionHeadTransform.construct:3
#: mindnlp.models.bert.BertSelfAttention.construct:3
#: mindnlp.models.bert.BertSelfOutput.construct:3
#: mindnlp.models.bert.Matmul.construct:3
msgid ""
"Note: It is not supported currently that inputs contain both tuple and non-"
"tuple types at same time."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertAttention.construct:5
#: mindnlp.models.bert.BertEmbeddings.construct:5
#: mindnlp.models.bert.BertEncoder.construct:5
#: mindnlp.models.bert.BertForPretraining.construct:5
#: mindnlp.models.bert.BertIntermediate.construct:5
#: mindnlp.models.bert.BertLMPredictionHead.construct:5
#: mindnlp.models.bert.BertLayer.construct:5
#: mindnlp.models.bert.BertModel.construct:5
#: mindnlp.models.bert.BertOutput.construct:5
#: mindnlp.models.bert.BertPooler.construct:5
#: mindnlp.models.bert.BertPreTrainingHeads.construct:5
#: mindnlp.models.bert.BertPredictionHeadTransform.construct:5
#: mindnlp.models.bert.BertSelfAttention.construct:5
#: mindnlp.models.bert.BertSelfOutput.construct:5
#: mindnlp.models.bert.Matmul.construct:5
msgid "Tuple of variable parameters."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertAttention.construct:7
#: mindnlp.models.bert.BertEmbeddings.construct:7
#: mindnlp.models.bert.BertEncoder.construct:7
#: mindnlp.models.bert.BertForPretraining.construct:7
#: mindnlp.models.bert.BertIntermediate.construct:7
#: mindnlp.models.bert.BertLMPredictionHead.construct:7
#: mindnlp.models.bert.BertLayer.construct:7
#: mindnlp.models.bert.BertModel.construct:7
#: mindnlp.models.bert.BertOutput.construct:7
#: mindnlp.models.bert.BertPooler.construct:7
#: mindnlp.models.bert.BertPreTrainingHeads.construct:7
#: mindnlp.models.bert.BertPredictionHeadTransform.construct:7
#: mindnlp.models.bert.BertSelfAttention.construct:7
#: mindnlp.models.bert.BertSelfOutput.construct:7
#: mindnlp.models.bert.Matmul.construct:7
msgid "Dictionary of variable keyword parameters."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertAttention.construct:10
#: mindnlp.models.bert.BertEmbeddings.construct:10
#: mindnlp.models.bert.BertEncoder.construct:10
#: mindnlp.models.bert.BertForPretraining.construct:10
#: mindnlp.models.bert.BertIntermediate.construct:10
#: mindnlp.models.bert.BertLMPredictionHead.construct:10
#: mindnlp.models.bert.BertLayer.construct:10
#: mindnlp.models.bert.BertModel.construct:10
#: mindnlp.models.bert.BertOutput.construct:10
#: mindnlp.models.bert.BertPooler.construct:10
#: mindnlp.models.bert.BertPreTrainingHeads.construct:10
#: mindnlp.models.bert.BertPredictionHeadTransform.construct:10
#: mindnlp.models.bert.BertSelfAttention.construct:10
#: mindnlp.models.bert.BertSelfOutput.construct:10
#: mindnlp.models.bert.Matmul.construct:10
msgid "Tensor, returns the computed result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertConfig:1
#, fuzzy
#| msgid "Bases: :py:class:`~mindnlp.abc.modules.embedding.TokenEmbedding`"
msgid "Bases: :py:class:`~mindnlp.models.bert.PretrainedConfig`"
msgstr "Bases: :py:class:`~mindnlp.abc.modules.embedding.TokenEmbedding`"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertConfig:1
msgid "Configuration for BERT-base"
msgstr "BERT-base配置类"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertEmbeddings:1
msgid "Embeddings for BERT, include word, position and token_type"
msgstr "Bert编码层，包括word embeddings，position embeddings和token type embeddings"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertEncoder:1
#, fuzzy
#| msgid "The encoder."
msgid "Bert Encoder"
msgstr "编码器"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertForPretraining:1
msgid "Bert For Pretraining"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertIntermediate:1
msgid "Bert Intermediate"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertLMPredictionHead:1
msgid "Bert LM Prediction Head"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertLayer:1
msgid "Bert Layer"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertModel:1
msgid "Bert Model"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertOutput:1
msgid "Bert Output"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertPooler:1
msgid "Bert Pooler"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertPreTrainingHeads:1
msgid "Bert PreTraining Heads"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertPredictionHeadTransform:1
msgid "Bert Prediction Head Transform"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertSelfAttention:1
msgid "Self attention layer for BERT."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertSelfAttention.transpose_for_scores:1
msgid "transpose for scores"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.BertSelfOutput:1
msgid "Bert Self Output"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.Matmul:1
msgid "Matmul Operation"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/bert.py:docstring
#: of mindnlp.models.bert.PretrainedConfig:1
msgid "Pretrained Config."
msgstr ""

#: ../../api/models.rst:14
msgid "elmo"
msgstr ""

#: ../../api/models.rst:22
msgid "gpt"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/models/__init__.py:docstring
#: of mindnlp.models:1
msgid "Models init"
msgstr ""

#: ../../api/modules/attentions.rst:2
msgid "Attentions"
msgstr "注意力机制"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions:1
msgid "attention module"
msgstr "注意力机制模块"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.AdditiveAttention:1
msgid ""
"Additive Attention Additive Attention proposed in \"Neural Machine "
"Translation by Jointly Learning to Align and Translate\" paper"
msgstr ""
"加性注意力机制由文章"
"《Neural Machine Translation by Jointly Learning to Align and Translate》提出"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.AdditiveAttention:4
msgid "Attention(Q,K,V) = (W_v)T *(tanh(W_q * Q + W_k * K))"
msgstr "加性注意力公式：Attention(Q,K,V) = (W_v)T *(tanh(W_q * Q + W_k * K))"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.AdditiveAttention:8
msgid "The dimesion of hidden state vector"
msgstr "向量hidden state的维度大小"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.AdditiveAttention:10
#: mindnlp.modules.attentions.CosineAttention:10
#: mindnlp.modules.attentions.ScaledDotAttention:8
msgid ""
"The keep rate, greater than 0 and less equal than 1. E.g. rate=0.9, dropping "
"out 10% of input units. Default: 0.9."
msgstr ""
"保留率，数值在0和1之间的，例如0.9"
"表示dropout率为10%，保留率为90%"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.AdditiveAttention.construct:1
msgid "Additive attention network construction."
msgstr "Additive attention网络前向传播"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.AdditiveAttention.construct:3
#: mindnlp.modules.attentions.CosineAttention.construct:3
#: mindnlp.modules.attentions.LinearAttention.construct:3
#: mindnlp.modules.attentions.ScaledDotAttention.construct:3
msgid "The query vector. [batch_size, query_size, hidden_size]"
msgstr "query向量，一般为[batch size, query_size, hidden_size]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.AdditiveAttention.construct:6
#: mindnlp.modules.attentions.CosineAttention.construct:6
#: mindnlp.modules.attentions.LinearAttention.construct:6
#: mindnlp.modules.attentions.ScaledDotAttention.construct:6
msgid "The key vector. [batch_size, key_size, hidden_size]"
msgstr "key向量，一般为[batch size, key_size, hidden_size]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.AdditiveAttention.construct:9
#: mindnlp.modules.attentions.CosineAttention.construct:9
#: mindnlp.modules.attentions.LinearAttention.construct:9
#: mindnlp.modules.attentions.ScaledDotAttention.construct:9
msgid "The value vector. [batch_size, seq_len, value_hidden_size]"
msgstr "value向量，一般为[batch size, seq_len, value_hidden_size]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.AdditiveAttention.construct:12
#: mindnlp.modules.attentions.CosineAttention.construct:12
#: mindnlp.modules.attentions.LinearAttention.construct:12
#: mindnlp.modules.attentions.ScaledDotAttention.construct:12
msgid "The mask vector. [batch_size, query_size, key_size]"
msgstr "mask张量，一般为[batch size, query_size, key_size]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.AdditiveAttention.construct:15
#: mindnlp.modules.attentions.CosineAttention.construct:15
#: mindnlp.modules.attentions.LinearAttention.construct:15
#: mindnlp.modules.attentions.ScaledDotAttention.construct:15
msgid ""
"- **output** (mindspore.Tensor) - The output of linear attention.   "
"[batch_size, query_size, value_hidden_size] - **attn** (mindspore.Tensor) - "
"The last layer of attention weights.   [batch_size, query_size, key_size]"
msgstr ""
"线性注意力输出output和注意力分数attn"
"线性注意力输出output，维度参考[batch_size, query_size, value_hidden_size]"
"线性注意力分数attn，维度参考[batch_size, query_size, key_size]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.AdditiveAttention.construct:17
#: mindnlp.modules.attentions.CosineAttention.construct:17
#: mindnlp.modules.attentions.LinearAttention.construct:17
#: mindnlp.modules.attentions.ScaledDotAttention.construct:17
msgid ""
"**output** (mindspore.Tensor) - The output of linear attention. [batch_size, "
"query_size, value_hidden_size]"
msgstr ""
"线性注意力输出output"
"维度参考[batch_size, query_size, value_hidden_size]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.AdditiveAttention.construct:19
#: mindnlp.modules.attentions.CosineAttention.construct:19
#: mindnlp.modules.attentions.LinearAttention.construct:19
#: mindnlp.modules.attentions.ScaledDotAttention.construct:19
msgid ""
"**attn** (mindspore.Tensor) - The last layer of attention weights. "
"[batch_size, query_size, key_size]"
msgstr ""
"线性注意力分数attn"
"维度参考[batch_size, query_size, key_size]"
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.BinaryAttention:1
msgid ""
"Binary Attention, For a given sequence of two vectors : x_i and y_j, the "
"BiAttention module will compute the attention result by the following "
"equation:"
msgstr ""
"针对所给的2个序列所表示的向量如x_i和y_i"
"BiAttentio模块会根据以下公式计算注意力结果"
"公式："
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.BinaryAttention:5
msgid ""
"  \\begin{array}{ll} \\\\\n"
"    e_{ij} = {x}^{\\mathrm{T}}_{i}{y}_{j} \\\\\n"
"    {\\hat{x}}_{i} = \\sum_{j=1}^{\\mathcal{l}_{y}}{\\frac{\n"
"        \\mathrm{exp}(e_{ij})}{\\sum_{k=1}^{\\mathcal{l}_{y}}{\\mathrm{exp}"
"(e_{ik})}}}{y}_{j} \\\\\n"
"    {\\hat{y}}_{j} = \\sum_{i=1}^{\\mathcal{l}_{x}}{\\frac{\n"
"        \\mathrm{exp}(e_{ij})}{\\sum_{k=1}^{\\mathcal{l}_{x}}{\\mathrm{exp}"
"(e_{ik})}}}{x}_{i} \\\\\n"
"\\end{array}"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.BinaryAttention.construct:1
msgid "Compute the attention result"
msgstr "计算注意力结果"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.BinaryAttention.construct:3
msgid "[batch_size, x_seq_len, hidden_size]"
msgstr "参考shape维度 [batch_size, x_seq_len, hidden_size]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.BinaryAttention.construct:5
msgid "[batch_size, x_seq_len]"
msgstr "参考shape维度 [batch_size, x_seq_len]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.BinaryAttention.construct:7
msgid "[batch_size, y_seq_len, hidden_size]"
msgstr "参考shape维度 [batch_size, y_seq_len, hidden_size]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.BinaryAttention.construct:9
msgid "[batch_size, y_seq_len]"
msgstr "参考shape维度 [batch_size, y_seq_len]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.BinaryAttention.construct:12
msgid ""
"- **attended_x** (mindspore.Tensor) - The output of the attention_x. - "
"**attended_y** (mindspore.Tensor) - The output of the attention_y."
msgstr ""
"attended_x，x向量的注意力在y向量下的注意力结果"
"attended_y，y向量的注意力在x向量下的注意力结果"
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.BinaryAttention.construct:14
msgid "**attended_x** (mindspore.Tensor) - The output of the attention_x."
msgstr "attended_x，x向量的注意力在y向量下的注意力结果"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.BinaryAttention.construct:15
msgid "**attended_y** (mindspore.Tensor) - The output of the attention_y."
msgstr "attended_y，y向量的注意力在x向量下的注意力结果"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.CosineAttention:1
msgid ""
"Cosine Attention Cosine Attention proposed in \"Neural Turing Machines\" "
"paper"
msgstr ""
"Cosine Attention由论文《Neural Turing Machines》提出"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.CosineAttention:4
msgid ""
"Sim(Q, K) = (Q * (K)T) / |Q| * |K|\n"
"Attention(Q,K,V) = softmax(Sim(Q, K)) * V"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.CosineAttention.construct:1
msgid "Consine attention network construction."
msgstr "Consine attention 网络前向传播"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LinearAttention:1
msgid "Linear attention computes attention by concat the query and key vector."
msgstr "线性注意力计算的方式采用对query向量和key向量进行拼接进行计算"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LinearAttention:3
msgid "The sentence length of `query`. Usually query.shape[-2]"
msgstr "query的序列长度，通常为query.shape[-2]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LinearAttention:5
msgid "The sentence length of `key`. Usually key.shape[-2]"
msgstr "key的序列长度，通常为key.shape[-2]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LinearAttention:7
#, fuzzy
#| msgid "The dimension of the pretrained vector. Default: 300."
msgid "The dimension of hidden vector"
msgstr "预训练词向量的维度.默认值：300."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LinearAttention:9
#: mindnlp.modules.attentions.MutiHeadAttention:9
#: mindnlp.modules.attentions.SelfAttention:6
msgid "The keep rate, greater than 0 and less equal than 1. Default: 0.9."
msgstr "保留率，数值在0和1之间的，例如0.9"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LinearAttention.construct:1
msgid "linear attention with concatenate construction"
msgstr "linear attention网络前向传播"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LocationAwareAttention:1
msgid ""
"Location Aware Attention Location Aware Attention proposed in \"Attention-"
"Based Models for Speech Recognition\""
msgstr ""
"Location Aware Attention由"
"论文《Attention-Based Models for Speech Recognition》提出"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LocationAwareAttention:4
msgid "The dimension of the hidden states"
msgstr "隐藏状态维度"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LocationAwareAttention:6
msgid "Smoothing label from \"Attention-Based Models for Speech Recognition\""
msgstr "《Attention-Based Models for Speech Recognition》论文中的Smoothing label"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LocationAwareAttention.construct:1
msgid "Location aware attention network construction."
msgstr "Location aware attention网络前向传播"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LocationAwareAttention.construct:3
msgid "Decoder hidden states, Shape=(batch_size, 1, decoder_dim)."
msgstr "query向量，同时也是Decoder的hidden states，shape参考[batch_size, 1, decoder_dim]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LocationAwareAttention.construct:6
msgid "Encoder outputs, Shape=(batch_size, seq_len, encoder_dim)."
msgstr "key向量，同时也是Encoder的hidden states，shape参考[batch_size, seq_len, encoder_dim]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LocationAwareAttention.construct:9
msgid "Attention weight of previous step, Shape=(batch_size, seq_len)."
msgstr "最后一个状态的注意力分数，shape参考[batch_size, seq_len]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LocationAwareAttention.construct:13
msgid ""
"- **context** (mindspore.Tensor) - The context vector, Shape=(batch_size, 1, "
"decoder_dim). - **attn** (mindspore.Tensor) - Attention weight of this step, "
"Shape=(batch_size, seq_len)."
msgstr ""
"context上下文向量，shape参考[batch_size, 1, decoder_dim]"
"attn当前状态下的注意力分数，shape参考[batch_size, seq_len]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LocationAwareAttention.construct:15
msgid ""
"**context** (mindspore.Tensor) - The context vector, Shape=(batch_size, 1, "
"decoder_dim)."
msgstr ""
"context上下文向量，shape参考[batch_size, 1, decoder_dim]"
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LocationAwareAttention.construct:16
msgid ""
"**attn** (mindspore.Tensor) - Attention weight of this step, "
"Shape=(batch_size, seq_len)."
msgstr ""
"attn当前状态下的注意力分数，shape参考[batch_size, seq_len]"
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LocationAwareAttention.set_mask:1
msgid "Set the mask"
msgstr "设置mask张量"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.LocationAwareAttention.set_mask:3
msgid "Args: mask mindspore.Tensor[bool]: The mask vector."
msgstr "mask张量类型为mindspore.Tensor[bool]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.MutiHeadAttention:1
msgid ""
"Muti-head attention is from the paper “attention is all you need” where "
"heads == 1 Muti-head attention is normal self-attention"
msgstr ""
"多头注意力机制由论文《attention is all you need》提出"
"当head数为1时，多头注意力机制及正常的自注意力机制"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.MutiHeadAttention:4
#, fuzzy
#| msgid "The name of the pretrained vector. Default: \"1M\"."
msgid "The number of head. Default: 8."
msgstr "多头注意力中的head数，默认为8"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.MutiHeadAttention:6
#: mindnlp.modules.attentions.SelfAttention:3
msgid "The `query`, `key` and `value` vectors dimensions. Default: 512."
msgstr "query、key、value向量隐藏维度大小，默认为512"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.MutiHeadAttention:12
#: mindnlp.modules.attentions.SelfAttention:9
#, fuzzy
#| msgid "Whether to use attention. Default: True."
msgid "whether to use a bias vector. Default: True."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.MutiHeadAttention:14
#: mindnlp.modules.attentions.SelfAttention:11
#, fuzzy
#| msgid "Output of encoder. Default: None."
msgid "attention mode. Default: \"dot\"."
msgstr "attention模式，可选dot、cos、add，默认为dot点乘"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.MutiHeadAttention.construct:1
msgid "Get muti-head attention output and attention weights."
msgstr "获取多头注意力输出和其注意力分数"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.MutiHeadAttention.construct:3
msgid "The query vector. Usually is [batch_size, seq_len, d_model]"
msgstr "query向量，维度参考[batch_size, seq_len, d_model]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.MutiHeadAttention.construct:6
msgid "The key vector. Usually is [batch_size, seq_len, d_model]"
msgstr "key向量，维度参考[batch_size, seq_len, d_model]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.MutiHeadAttention.construct:9
#: mindnlp.modules.attentions.SelfAttention.construct:7
msgid "The value vector. [batch_size, seq_len, d_model]"
msgstr "value向量，维度参考[batch_size, seq_len, d_model]"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.MutiHeadAttention.construct:12
#: mindnlp.modules.attentions.SelfAttention.construct:10
msgid "The mask vector. [batch_size, seq_len, seq_len]"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.MutiHeadAttention.construct:15
msgid ""
"- **output** (mindspore.Tensor) - The output of muti-head attention. - "
"**attn** (mindspore.Tensor) - The last layer of attention weights."
msgstr ""
"output多头注意力输出"
"attn多头注意力的注意力分数"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.MutiHeadAttention.construct:17
msgid "**output** (mindspore.Tensor) - The output of muti-head attention."
msgstr "output多头注意力输出"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.MutiHeadAttention.construct:18
msgid "**attn** (mindspore.Tensor) - The last layer of attention weights."
msgstr "attn多头注意力的注意力分数"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.ScaledDotAttention:1
msgid ""
"Scaled Dot-Product Attention Scaled Dot-Product Attention proposed in "
"\"Attention Is All You Need\""
msgstr ""
"缩放点乘注意力机制由论文"
"《Attention Is All You Need》提出"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.ScaledDotAttention:4
msgid "Attention(Q,K,V)=softmax(\\frac{QK^T}{\\sqrt{d_k}})V"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.ScaledDotAttention.construct:1
msgid "Scaled dot-product attention network construction."
msgstr "缩放点乘注意力网络前向传播"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.SelfAttention:1
msgid "Self attention is from the paper “attention is all you need”"
msgstr "自注意力机制由论文《Attention Is All You Need》提出""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.SelfAttention.construct:1
msgid "Get self-attention output and attention weights."
msgstr "获取自注意力输出和其注意力分数"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.SelfAttention.construct:3
#, fuzzy
#| msgid "The encoder."
msgid "The query vector."
msgstr "query向量"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.SelfAttention.construct:5
#, fuzzy
#| msgid "The encoder."
msgid "The key vector."
msgstr "key向量"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.SelfAttention.construct:13
msgid ""
"- **output** (mindspore.Tensor) - The output of self attention. - **attn** "
"(mindspore.Tensor) - The last layer of attention weights"
msgstr ""
"output多头注意力输出"
"attn多头注意力的注意力分数"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.SelfAttention.construct:15
msgid "**output** (mindspore.Tensor) - The output of self attention."
msgstr "output多头注意力输出"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/attentions.py:docstring
#: of mindnlp.modules.attentions.SelfAttention.construct:16
msgid "**attn** (mindspore.Tensor) - The last layer of attention weights"
msgstr "attn多头注意力的注意力分数"

#: ../../api/modules/decoder.rst:2
msgid "Decoder"
msgstr ""

#: ../../api/modules/decoder.rst:6
msgid "rnn\\_decoder"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder:1
msgid "RNN Decoder modules"
msgstr "RNN解码器模块"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder:1
msgid "Bases: :py:class:`~mindnlp.abc.modules.decoder.DecoderBase`"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder:1
msgid "Stacked Elman RNN Decoder."
msgstr "循环神经网络（RNN）解码器"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder:5
msgid "The list of RNN cells."
msgstr "循环神经网络单元的列表"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder:7
msgid ""
"If not 0, append `Dropout` layer on the inputs of each RNN layer. Default 0. "
"The range of dropout is [0.0, 1.0)."
msgstr ""
"如果值不为0，则对每一个rnn层的输入进行`Dropout`操作，值为神经元丢弃概率。默认"
"值：0，范围为[0.0, 1.0)。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder:10
msgid ""
"If not 0, append `Dropout` layer on the outputs of each RNN layer except the "
"last layer. Default 0. The range of dropout is [0.0, 1.0)."
msgstr ""
"如果值不为0，则对每一个rnn层的输出进行`Dropout`操作，值为神经元丢弃概率。默认"
"值：0，范围为[0.0, 1.0)。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder:13
msgid "Whether to use attention. Default: True."
msgstr "指定是否使用attention。默认值：True。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder:15
msgid "Number of features of encoder output. Default: 512."
msgstr "编码器输出特征的数目。默认值：512."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder.construct:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: mindnlp.modules.encoder.rnn_encoder.RNNEncoder.construct:1
msgid "Construct method."
msgstr "Cell的construct方法"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder.construct:3
#: mindnlp.modules.decoder.rnn_decoder.RNNDecoder.extract_features:3
msgid "Output tokens for teacher forcing with shape [batch, tgt_len]."
msgstr "用于teacher-forcing模式的token，shape为[batch, tgt_len]。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder.construct:5
#: mindnlp.modules.decoder.rnn_decoder.RNNDecoder.extract_features:5
msgid "Output of encoder. Default: None."
msgstr "编码器的输出。默认值：None。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder.construct:8
msgid ""
"Tuple, a tuple contains (`output`, `attn_scores`).  - output (Tensor): "
"Tensor of shape (batch, `tgt_len`, `vocab_size`). - attn_scores (Tensor): "
"Tensor of shape (batch, `tgt_len`, `src_len`)   if attention=True otherwise "
"None."
msgstr ""
"Tuple类型，返回一个包含(`output`, `attn_scores`)的tuple。 - output (Tensor): "
"shape为(batch, `tgt_len`, `vocab_size`)的Tensor。 - attn_scores (Tensor): 如"
"果attention=True，则是shape为(batch, `tgt_len`, `src_len`)的Tensor；否则为"
"None。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder.construct:8
#: mindnlp.modules.decoder.rnn_decoder.RNNDecoder.extract_features:8
msgid "Tuple, a tuple contains (`output`, `attn_scores`)."
msgstr "Tuple类型，返回一个包含(`output`, `attn_scores`)的tuple。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder.construct:10
msgid "output (Tensor): Tensor of shape (batch, `tgt_len`, `vocab_size`)."
msgstr "output (Tensor): shape为(batch, `tgt_len`, `vocab_size`)的Tensor。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder.construct:11
#: mindnlp.modules.decoder.rnn_decoder.RNNDecoder.extract_features:11
msgid ""
"attn_scores (Tensor): Tensor of shape (batch, `tgt_len`, `src_len`) if "
"attention=True otherwise None."
msgstr ""
"attn_scores (Tensor): 如果attention=True，则是shape为(batch, `tgt_len`, "
"`src_len`)的Tensor；否则为None。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder.extract_features:1
msgid "Extract features of encoder output."
msgstr "提取编码器输出的特征"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder.extract_features:8
msgid ""
"Tuple, a tuple contains (`output`, `attn_scores`).  - output (Tensor): The "
"extracted feature Tensor of shape (batch, `tgt_len`, `hidden_size`). - "
"attn_scores (Tensor): Tensor of shape (batch, `tgt_len`, `src_len`)   if "
"attention=True otherwise None."
msgstr ""
"Tuple类型，返回一个包含(`output`, `attn_scores`)的tuple。 - output (Tensor): "
"shape为(batch, `tgt_len`, `hidden_size`)的Tensor。 - attn_scores (Tensor): 如"
"果attention=True，则是shape为(batch, `tgt_len`, `src_len`)的Tensor；否则为"
"None。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder.extract_features:10
msgid ""
"output (Tensor): The extracted feature Tensor of shape (batch, `tgt_len`, "
"`hidden_size`)."
msgstr "output (Tensor): shape为(batch, `tgt_len`, `hidden_size`)的Tensor。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder.output_layer:1
msgid "Project features to the vocabulary size."
msgstr "将特征映射到词汇中元素的个数"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder.output_layer:3
msgid "The extracted feature Tensor."
msgstr "提取的特征Tensor"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/rnn_decoder.py:docstring
#: of mindnlp.modules.decoder.rnn_decoder.RNNDecoder.output_layer:6
msgid "Tensor, the output of decoder."
msgstr "Tensor类型，返回解码器的结果。"

#: ../../api/modules/decoder.rst:14
msgid "transformer\\_decoder"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/decoder/__init__.py:docstring
#: of mindnlp.modules.decoder:1
msgid "Decoder class"
msgstr ""

#: ../../api/modules/embeddings.rst:2
msgid "Embeddings"
msgstr "Embeddings"

#: ../../api/modules/embeddings.rst:6
msgid "fasttext\\_embedding"
msgstr "fasttext\\_embedding"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding:1
msgid "Fasttext_embedding"
msgstr "Fasttext_embedding"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec:1
msgid "Bases: :py:class:`~mindnlp.abc.modules.embedding.TokenEmbedding`"
msgstr "Bases: :py:class:`~mindnlp.abc.modules.embedding.TokenEmbedding`"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec:5
msgid "Passing into Tensor,use these values to initialize Embedding directly."
msgstr "用传入的Tensor直接初始化embedding."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec:7
msgid "Whether this parameter needs to be gradient to update. Default: True."
msgstr "参数是否需要梯度下降来更新.默认值：True."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec:9
msgid "Dropout of the output of Embedding. Default: 0.5."
msgstr "Embedding层的Dropout丢弃率.默认值：0.5."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.construct:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.construct:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.construct:1
msgid "Ids to query."
msgstr "通过embedding查询的词典下标。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.construct:4
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.construct:4
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.construct:4
msgid "- Tensor, returns the Embedding query results."
msgstr "- Tensor, 返回embedding运算结果."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.construct:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.construct:6
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.construct:6
msgid "Tensor, returns the Embedding query results."
msgstr "Tensor, 返回embedding运算结果."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.from_pretrained:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.from_pretrained:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.from_pretrained:1
msgid "Creates Embedding instance from given 2-dimensional FloatTensor."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.from_pretrained:3
msgid "The name of the pretrained vector. Default: \"1M\"."
msgstr "预训练词向量的名字.默认值：\"1M\"."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.from_pretrained:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.from_pretrained:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.from_pretrained:5
msgid "The dimension of the pretrained vector. Default: 300."
msgstr "预训练词向量的维度.默认值：300."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.from_pretrained:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.from_pretrained:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.from_pretrained:7
msgid "Default storage directory. Default: DEFAULT_ROOT."
msgstr "默认保存路径.默认值：DEFAULT_ROOT."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.from_pretrained:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.from_pretrained:9
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.from_pretrained:9
msgid "List of special participles. Default: (\"<pad>\", \"<unk>\")."
msgstr "由特殊token组成的list.默认值：(\"<pad>\", \"<unk>\")."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.from_pretrained:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.from_pretrained:11
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.from_pretrained:11
msgid ""
"Indicates whether special participles from special_tokens will be added to "
"the top of the dictionary. If True, add special_tokens to the beginning of "
"the dictionary, otherwise add them to the end. Default: True."
msgstr ""
"是否添加special_tokens中的元素到字典头部.如果为True,则添加到头部,反之添加到尾"
"部。默认值：True."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.from_pretrained:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.from_pretrained:15
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.from_pretrained:17
msgid ""
"- requires_grad (bool): Whether this parameter needs to be gradient to "
"update. - dropout (float): Dropout of the output of Embedding."
msgstr ""
"- requires_grad (bool): 参数是否需要梯度下降来更新.- dropout (float): "
"Embedding层的Dropout丢弃率.默认值：0.5."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.from_pretrained:16
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.from_pretrained:16
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.from_pretrained:18
#, fuzzy
#| msgid ""
#| "requires_grad (bool): Whether this parameter needs to be gradient to "
#| "update.Default: True."
msgid ""
"requires_grad (bool): Whether this parameter needs to be gradient to update."
msgstr "requires_grad (bool): 参数是否需要梯度下降来更新.默认值: True."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.from_pretrained:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.from_pretrained:17
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.from_pretrained:19
msgid "dropout (float): Dropout of the output of Embedding."
msgstr "dropout (float): Embedding层的Dropout丢弃率.默认值：0.5."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.from_pretrained:20
msgid ""
"- Fasttext, Returns an embedding instance generated through a pretrained "
"word vector. - Vocab, Vocabulary extracted from the file."
msgstr ""
"- Fasttext, 返回一个由预训练词向量生成的embedding.- Vocab, 从词向量文件中提取"
"的词汇."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.from_pretrained:22
msgid ""
"Fasttext, Returns an embedding instance generated through a pretrained word "
"vector."
msgstr "Fasttext, 返回一个由预训练词向量生成的embedding."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.from_pretrained:23
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.from_pretrained:23
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.from_pretrained:25
msgid "Vocab, Vocabulary extracted from the file."
msgstr "Vocab, 从词向量文件中提取的词汇."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.load:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.load:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.load:1
msgid "Load embedding from the specified location."
msgstr "通过指定路径的参数文件初始化embedding."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.load:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.load:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.load:3
msgid "Name of the folder to load. Default: None."
msgstr "加载embedding所在的目录名.默认值：None."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.load:5
#: mindnlp.modules.embeddings.fasttext_embedding.Fasttext.save:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.load:5
#: mindnlp.modules.embeddings.glove_embedding.Glove.save:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.load:5
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.save:5
msgid "Path of the embedding folder. Default: DEFAULT_ROOT."
msgstr "embedding参数文件所在的路径.默认值：DEFAULT_ROOT."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.load:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.load:7
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.load:7
msgid ""
"Whether to initialize the embedding as a npy file. Vocab and npy_path are "
"valid when load_npy is True. Default: False."
msgstr ""
"是否以npy文件的方式初始化embedding.当load_npy为True时,Vocab和npy_path有效。默"
"认值：False."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.load:10
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.load:10
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.load:10
msgid "If initialized with a npy file, pass in vocab. Default: None."
msgstr "如果用npy文件初始化,则传入Vocab.默认值：None."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.load:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.load:12
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.load:12
msgid "Location of the npy file. Default: None."
msgstr "npy文件的路径.默认值：None."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.load:15
#: mindnlp.modules.embeddings.fasttext_embedding.Fasttext.save:8
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.load:15
#: mindnlp.modules.embeddings.glove_embedding.Glove.save:8
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.load:15
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.save:8
msgid "None"
msgstr "None"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.save:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.save:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.save:1
msgid "Save the embedding to the specified location."
msgstr "保存embedding到指定路径."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/fasttext_embedding.py:docstring
#: of mindnlp.modules.embeddings.fasttext_embedding.Fasttext.save:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: mindnlp.modules.embeddings.glove_embedding.Glove.save:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: mindnlp.modules.embeddings.word2vec_embedding.Word2vec.save:3
msgid "Name of the folder to store."
msgstr "保存embedding参数的目录名."

#: ../../api/modules/embeddings.rst:14
msgid "glove\\_embedding"
msgstr "glove\\_embedding"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: of mindnlp.modules.embeddings.glove_embedding:1
msgid "glove_embedding"
msgstr "glove_embedding"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: of mindnlp.modules.embeddings.glove_embedding.Glove.from_pretrained:3
msgid "The name of the pretrained vector. Default: '6B'."
msgstr "预训练词向量的名字.默认值：'6B'."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: of mindnlp.modules.embeddings.glove_embedding.Glove.from_pretrained:20
msgid ""
"- Glove, Returns an embedding instance generated through a pretrained word "
"vector. - Vocab, Vocabulary extracted from the file."
msgstr ""
"- Glove, 返回一个由预训练词向量生成的embedding.- Vocab, 从词向量文件中提取的"
"词汇."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/glove_embedding.py:docstring
#: of mindnlp.modules.embeddings.glove_embedding.Glove.from_pretrained:22
msgid ""
"Glove, Returns an embedding instance generated through a pretrained word "
"vector."
msgstr "Glove, 返回一个由预训练词向量生成的embedding."

#: ../../api/modules/embeddings.rst:22
msgid "word2vec\\_embedding"
msgstr "word2vec\\_embedding"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: of mindnlp.modules.embeddings.word2vec_embedding:1
msgid "Word2vec_embedding"
msgstr "Word2vec_embedding"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: of mindnlp.modules.embeddings.word2vec_embedding.Word2vec.from_pretrained:3
msgid "The name of the pretrained vector. Default: 'google-news'."
msgstr "预训练词向量的名字。默认值：'google-news'."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: of mindnlp.modules.embeddings.word2vec_embedding.Word2vec.from_pretrained:15
msgid "Whether to load word vectors with gensim library."
msgstr "是否用gensim库加载词向量.若为True则表示使用gensim库.默认值：True."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: of mindnlp.modules.embeddings.word2vec_embedding.Word2vec.from_pretrained:22
msgid ""
"- Word2vec, Returns an embedding instance generated through a pretrained "
"word vector. - Vocab, Vocabulary extracted from the file."
msgstr ""
"- Word2vec, 返回一个由预训练词向量生成的embedding.- Vocab, 从词向量文件提取的"
"词汇."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/word2vec_embedding.py:docstring
#: of mindnlp.modules.embeddings.word2vec_embedding.Word2vec.from_pretrained:24
msgid ""
"Word2vec, Returns an embedding instance generated through a pretrained word "
"vector."
msgstr "Word2vec, 返回一个由预训练词向量生成的embedding."

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/embeddings/__init__.py:docstring
#: of mindnlp.modules.embeddings:1
msgid "Embedding class"
msgstr "Embedding class"

#: ../../api/modules/encoder.rst:2
msgid "Encoder"
msgstr ""

#: ../../api/modules/encoder.rst:6
msgid "cnn\\_encoder"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder:1
msgid "CNN encoder modules"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder:1
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: mindnlp.modules.encoder.rnn_encoder.RNNEncoder:1
msgid "Bases: :py:class:`~mindnlp.abc.modules.encoder.EncoderBase`"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder:1
msgid "CNN Encoder."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder:3
msgid "Convolutional encoder consisting of `len(convolutions)` layers."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder:7
msgid "The list of Conv Cell."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder:9
msgid "Activation to use after the convolution layers."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder:11
msgid ""
"The output vector of collected features after doing convolutions and "
"pooling. If this value is `None`, return the result of the max pooling, an "
"output of shape."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder:15
msgid "if `embedding` is not a Cell."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder:16
msgid "if `convs` is not a list[Cell]."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder:17
msgid "if `conv_layer_activation` is not a Module."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder:18
msgid "if `output_dim` is not a int."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder:19
msgid "If `embedding` is None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder:20
msgid "If `convs` is None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder.construct:1
msgid "Construct function of CNNEncoder."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder.construct:3
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: mindnlp.modules.encoder.rnn_encoder.RNNEncoder.construct:3
msgid "Tokens in the source language with shape [batch, max_len]."
msgstr "源语言中的token，shape为[batch, max_len]。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder.construct:5
#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: mindnlp.modules.encoder.rnn_encoder.RNNEncoder.construct:7
msgid ""
"Its elements identify whether the corresponding input token is padding or "
"not. If the value is 1, not padding token. If the value is 0, padding token. "
"Defaults to None."
msgstr ""
"用于判断对应的输入token是否为padding部分。若值为1，则不是padding部分；若值为"
"0，则是padding部分。默认值：None"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder.construct:9
msgid ""
"Tensor, If output_dim is None, the result shape is of `(batch_size, "
"len(convs) * num_filter)` and dtype is `float`; If not, the result shape is "
"of `(batch_size, output_dim)`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder.get_input_dim:1
msgid "Returns the dimension of input vector"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/cnn_encoder.py:docstring
#: of mindnlp.modules.encoder.cnn_encoder.CNNEncoder.get_output_dim:1
msgid "Returns the dimension of the output vector"
msgstr ""

#: ../../api/modules/encoder.rst:14
msgid "rnn\\_encoder"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: of mindnlp.modules.encoder.rnn_encoder:1
msgid "RNN encoder modules"
msgstr "RNN编码器模块"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: of mindnlp.modules.encoder.rnn_encoder.RNNEncoder:1
msgid "Stacked Elman RNN Encoder."
msgstr "循环神经网络（RNN）编码器"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: of mindnlp.modules.encoder.rnn_encoder.RNNEncoder:5
msgid "The RNN Layer."
msgstr "RNN层"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: of mindnlp.modules.encoder.rnn_encoder.RNNEncoder.construct:5
msgid "Lengths of each sentence with shape [batch]."
msgstr "输入batch的序列长度，shape为[batch]。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: of mindnlp.modules.encoder.rnn_encoder.RNNEncoder.construct:11
msgid ""
"Tuple, a tuple contains (`output`, `hiddens_n`, `mask`).  - output (Tensor): "
"Tensor of shape (seq_len, batch_size, num_directions * `hidden_size`). - "
"hiddens_n (Tensor): Tensor of shape (num_directions * `num_layers`, "
"batch_size, `hidden_size`). - mask (Tensor): Mask Tensor used in decoder."
msgstr ""
"Tuple类型，返回一个包含(`output`, `hiddens_n`, `mask`)的tuple。 - output "
"(Tensor): shape为(seq_len, batch_size, num_directions * `hidden_size`)的"
"Tensor。 - hiddens_n (Tensor): shape为(num_directions * `num_layers`, "
"batch_size, `hidden_size`)的Tensor。 - mask (Tensor): 需要在解码器中使用的"
"Mask Tensor。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: of mindnlp.modules.encoder.rnn_encoder.RNNEncoder.construct:11
msgid "Tuple, a tuple contains (`output`, `hiddens_n`, `mask`)."
msgstr "Tuple类型，返回一个包含(`output`, `hiddens_n`, `mask`)的tuple。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: of mindnlp.modules.encoder.rnn_encoder.RNNEncoder.construct:13
msgid ""
"output (Tensor): Tensor of shape (seq_len, batch_size, num_directions * "
"`hidden_size`)."
msgstr ""
"output (Tensor): shape为(seq_len, batch_size, num_directions * `hidden_size`)"
"的Tensor。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: of mindnlp.modules.encoder.rnn_encoder.RNNEncoder.construct:14
msgid ""
"hiddens_n (Tensor): Tensor of shape (num_directions * `num_layers`, "
"batch_size, `hidden_size`)."
msgstr ""
"hiddens_n (Tensor): shape为(num_directions * `num_layers`, batch_size, "
"`hidden_size`)的Tensor。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: of mindnlp.modules.encoder.rnn_encoder.RNNEncoder.construct:15
msgid "mask (Tensor): Mask Tensor used in decoder."
msgstr "mask (Tensor): 需要在解码器中使用的Mask Tensor。"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: of mindnlp.modules.encoder.rnn_encoder.RNNEncoder.reorder_encoder_out:1
msgid "Reorder encoder output according to `new_order`."
msgstr "根据`new_order`重新排序编码器的输出顺序"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: of mindnlp.modules.encoder.rnn_encoder.RNNEncoder.reorder_encoder_out:3
msgid "The encoder's output."
msgstr "编码器的输出"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: of mindnlp.modules.encoder.rnn_encoder.RNNEncoder.reorder_encoder_out:5
msgid "Desired order."
msgstr "预期的顺序"

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/rnn_encoder.py:docstring
#: of mindnlp.modules.encoder.rnn_encoder.RNNEncoder.reorder_encoder_out:8
msgid "Tuple, encoder_out rearranged according to new_order."
msgstr "Tuple类型，返回根据`new_order`重新排列的编码器输出"

#: ../../api/modules/encoder.rst:22
msgid "transformer\\_encoder"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/modules/encoder/__init__.py:docstring
#: of mindnlp.modules.encoder:1
msgid "Encoder class"
msgstr ""

#: ../../api/utils.rst:2
msgid "Utils"
msgstr ""

#: ../../api/utils.rst:6
msgid "decompress"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress:1
msgid "Decompress functions"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress.ungz:1
msgid "Untar .gz file"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress.ungz:3
msgid "The path where the .gz file is located."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress.ungz:5 mindnlp.utils.decompress.ungz:8
#: mindnlp.utils.decompress.untar:5 mindnlp.utils.decompress.unzip:5
msgid "The directory where the files were unzipped."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress.ungz:0
msgid "Return type"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress.ungz:9
msgid "- **unzip_path** (str)"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress.ungz:9
msgid "**unzip_path** (str)"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress.ungz:11 mindnlp.utils.decompress.untar:12
#: mindnlp.utils.decompress.unzip:12
msgid "If `file_path` is not a string."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress.ungz:12 mindnlp.utils.decompress.untar:13
#: mindnlp.utils.decompress.unzip:13
msgid "If `untar_path` is not a string."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress.untar:1
msgid "Untar tar.gz file"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress.untar:3
msgid "The path where the tgz file is located."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress.untar:8
msgid "- **names** (list) -All filenames in the tar.gz file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress.untar:10
msgid "**names** (list) -All filenames in the tar.gz file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress.unzip:1
msgid "Untar .zip file"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress.unzip:3
msgid "The path where the .zip file is located."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress.unzip:8
msgid "- **names** (list) -All filenames in the .zip file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/decompress.py:docstring
#: of mindnlp.utils.decompress.unzip:10
msgid "**names** (list) -All filenames in the .zip file."
msgstr ""

#: ../../api/utils.rst:14
msgid "download"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download:1
msgid "Download functions"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.cache_file:1 mindnlp.utils.download.cached_path:1
#: mindnlp.utils.download.get_from_cache:1
msgid ""
"If there is the file in cache_dir, return the path; if there is no such "
"file, use the url to download."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.cache_file:3
msgid "The name of the required dataset file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.cache_file:5 mindnlp.utils.download.cached_path:5
#: mindnlp.utils.download.get_from_cache:5 mindnlp.utils.download.match_file:5
msgid "The path of save the file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.cache_file:7
msgid "The url of the required dataset file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.cache_file:9 mindnlp.utils.download.cached_path:9
#: mindnlp.utils.download.check_md5:5 mindnlp.utils.download.get_from_cache:7
#: mindnlp.utils.download.http_get:7
msgid "The true md5sum of download file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.cache_file:11
#: mindnlp.utils.download.cached_path:11
#: mindnlp.utils.download.get_from_cache:9
msgid ""
"The name of the downloaded file.\\ (This parameter is required if the end of "
"the link is not the downloaded file name.)"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.cache_file:17
#: mindnlp.utils.download.cached_path:17 mindnlp.utils.download.get_filepath:6
msgid ""
"- str, If `path` is a folder containing a file, return `{path}\\{filename}"
"`;   if `path` is a folder containing multiple files or a single file, "
"return `path`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.cache_file:19
#: mindnlp.utils.download.cached_path:19 mindnlp.utils.download.get_filepath:8
msgid ""
"str, If `path` is a folder containing a file, return `{path}\\{filename}`; "
"if `path` is a folder containing multiple files or a single file, return "
"`path`."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.cache_file:22 mindnlp.utils.download.check_md5:10
#: mindnlp.utils.download.match_file:14
msgid "If `filename` is not a string."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.cache_file:23 mindnlp.utils.download.match_file:15
msgid "If `cache_dir` is not a string."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.cache_file:24
#: mindnlp.utils.download.get_from_cache:20
msgid "If `url` is not a string."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.cache_file:25 mindnlp.utils.download.check_md5:11
#: mindnlp.utils.download.match_file:16
msgid "If `filename` is None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.cached_path:3
msgid "The name or url of the required file ."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.cached_path:7
msgid ""
"The additional folder to which the dataset is cached.(under the `cache_dir`)"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.cached_path:22
#: mindnlp.utils.download.get_filepath:11
msgid "If `path` is not a string."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.cached_path:23
#: mindnlp.utils.download.get_filepath:12
msgid "If `path` is None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.check_md5:1
msgid "Check md5 of download file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.check_md5:3
msgid "The fullname of download file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.check_md5:8
msgid "bool, the md5 check result."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.get_cache_path:1
msgid ""
"Get the storage path of the default cache. If the environment 'cache_path' "
"is set, use the environment variable."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.get_cache_path:5
#: mindnlp.utils.download.http_get:15
msgid "str, the path of default or the environment 'cache_path'."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.get_dataset_url:1
msgid "Get dataset url for download"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.get_dataset_url:3
msgid "The name of the dataset to download."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.get_dataset_url:6
msgid "str, the url of the dataset to download."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.get_dataset_url:8
msgid "If `datasetname` is not a string."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.get_dataset_url:9
msgid "If `datasetname` is None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.get_filepath:1
msgid "Get the filepath of file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.get_filepath:3
msgid "The path of the required file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.get_from_cache:3
msgid "The path to download the file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.get_from_cache:15
msgid ""
"- str, The path of save the downloaded file. - str, The name of downloaded "
"file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.get_from_cache:17
msgid "str, The path of save the downloaded file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.get_from_cache:18
msgid "str, The name of downloaded file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.get_from_cache:21
msgid "If `cache_dir` is not a Path."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.get_from_cache:22
#: mindnlp.utils.download.http_get:18
msgid "If `url` is None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.http_get:1
msgid "Download from given url, save to path."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.http_get:3
msgid "download url"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.http_get:5
msgid "download to given path (default value: '{home}\\.text')"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.http_get:9
msgid ""
"The name of the downloaded file.\\ (This para meter is required if the end "
"of the link is not the downloaded file name.)"
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.http_get:17
msgid "If `url` is not a String."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.match_file:1
msgid ""
"If there is the file in cache_dir, return the path; otherwise, return empty "
"string or error."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.match_file:3
msgid "The name of the required file."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.match_file:8
msgid ""
"- str, If there is the file in cache_dir, return filename;   if there is no "
"such file, return empty string '';   if there are two or more matching file, "
"report an error."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.match_file:10
msgid ""
"str, If there is the file in cache_dir, return filename; if there is no such "
"file, return empty string ''; if there are two or more matching file, report "
"an error."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/download.py:docstring
#: of mindnlp.utils.download.match_file:17
msgid "If `cache_dir` is None."
msgstr ""

#: ../../../../../../../Install/Miniconda3/lib/site-packages/mindnlp/utils/__init__.py:docstring
#: of mindnlp.utils:1
msgid "Common utils"
msgstr ""

#: ../../api/workflow.rst:2
msgid "workflow"
msgstr ""

#: ../../api/workflow.rst:12
msgid "inference\\_pipeline"
msgstr ""

#: ../../api/workflow.rst:20
msgid "pipeline"
msgstr ""

#: ../../api/workflow.rst:28
msgid "task"
msgstr ""

#: ../../api/workflow.rst:36
msgid "training\\_pipeline"
msgstr ""

#~ msgid "Initialize the Embedding based on the pre-trained word vectors."
#~ msgstr "根据预训练词向量初始化Embedding."
